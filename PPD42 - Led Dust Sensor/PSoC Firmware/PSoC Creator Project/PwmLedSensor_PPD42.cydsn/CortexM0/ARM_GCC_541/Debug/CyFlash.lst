ARM GAS  C:\Users\Toshiba\AppData\Local\Temp\ccSNWM24.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m0
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 0
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"CyFlash.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.bss
  20              		.align	2
  21              	cySysFlashBackup:
  22 0000 00000000 		.space	20
  22      00000000 
  22      00000000 
  22      00000000 
  22      00000000 
  23              		.section	.text.CySysFlashWriteRow,"ax",%progbits
  24              		.align	2
  25              		.global	CySysFlashWriteRow
  26              		.code	16
  27              		.thumb_func
  28              		.type	CySysFlashWriteRow, %function
  29              	CySysFlashWriteRow:
  30              	.LFB2:
  31              		.file 1 "Generated_Source\\PSoC4\\CyFlash.c"
   1:Generated_Source\PSoC4/CyFlash.c **** /***************************************************************************//**
   2:Generated_Source\PSoC4/CyFlash.c **** * \file CyFlash.c
   3:Generated_Source\PSoC4/CyFlash.c **** * \version 5.60
   4:Generated_Source\PSoC4/CyFlash.c **** *
   5:Generated_Source\PSoC4/CyFlash.c **** * \brief Provides an API for the FLASH.
   6:Generated_Source\PSoC4/CyFlash.c **** *
   7:Generated_Source\PSoC4/CyFlash.c **** * \note This code is endian agnostic.
   8:Generated_Source\PSoC4/CyFlash.c **** *
   9:Generated_Source\PSoC4/CyFlash.c **** * \note Documentation of the API's in this file is located in the System
  10:Generated_Source\PSoC4/CyFlash.c **** * Reference Guide provided with PSoC Creator.
  11:Generated_Source\PSoC4/CyFlash.c **** *
  12:Generated_Source\PSoC4/CyFlash.c **** ********************************************************************************
  13:Generated_Source\PSoC4/CyFlash.c **** * \copyright
  14:Generated_Source\PSoC4/CyFlash.c **** * Copyright 2010-2017, Cypress Semiconductor Corporation.  All rights reserved.
  15:Generated_Source\PSoC4/CyFlash.c **** * You may use this file only in accordance with the license, terms, conditions,
  16:Generated_Source\PSoC4/CyFlash.c **** * disclaimers, and limitations in the end user license agreement accompanying
  17:Generated_Source\PSoC4/CyFlash.c **** * the software package with which this file was provided.
  18:Generated_Source\PSoC4/CyFlash.c **** *******************************************************************************/
  19:Generated_Source\PSoC4/CyFlash.c **** 
  20:Generated_Source\PSoC4/CyFlash.c **** #include "CyFlash.h"
  21:Generated_Source\PSoC4/CyFlash.c **** 
  22:Generated_Source\PSoC4/CyFlash.c **** 
ARM GAS  C:\Users\Toshiba\AppData\Local\Temp\ccSNWM24.s 			page 2


  23:Generated_Source\PSoC4/CyFlash.c **** /*******************************************************************************
  24:Generated_Source\PSoC4/CyFlash.c **** * Cypress identified a defect with the Flash write functionality of the
  25:Generated_Source\PSoC4/CyFlash.c **** * PSoC 4000, PSoC 4000U, PSoC 4100, and PSoC 4200 devices. The 
  26:Generated_Source\PSoC4/CyFlash.c **** * CySysFlashWriteRow() function now checks the data to be written and, if 
  27:Generated_Source\PSoC4/CyFlash.c **** * necessary, modifies it to have a non-zero checksum. After writing to Flash, 
  28:Generated_Source\PSoC4/CyFlash.c **** * the modified data is replaced (Flash program) with 
  29:Generated_Source\PSoC4/CyFlash.c **** * the correct (original) data.
  30:Generated_Source\PSoC4/CyFlash.c **** *******************************************************************************/
  31:Generated_Source\PSoC4/CyFlash.c **** #define CY_FLASH_CHECKSUM_WORKAROUND    (CY_PSOC4_4000 || CY_PSOC4_4100 || CY_PSOC4_4200 || CY_PSOC
  32:Generated_Source\PSoC4/CyFlash.c **** 
  33:Generated_Source\PSoC4/CyFlash.c **** #if (CY_IP_FM || ((!CY_PSOC4_4000) && CY_IP_SPCIF_SYNCHRONOUS) || (!CY_IP_FM) && CY_PSOC4_4000)
  34:Generated_Source\PSoC4/CyFlash.c ****     static CY_SYS_FLASH_CLOCK_BACKUP_STRUCT cySysFlashBackup;
  35:Generated_Source\PSoC4/CyFlash.c **** #endif /* (CY_IP_FM || ((!CY_PSOC4_4000) && CY_IP_SPCIF_SYNCHRONOUS) || (!CY_IP_FM) && CY_PSOC4_400
  36:Generated_Source\PSoC4/CyFlash.c **** 
  37:Generated_Source\PSoC4/CyFlash.c **** static cystatus CySysFlashClockBackup(void);
  38:Generated_Source\PSoC4/CyFlash.c **** static cystatus CySysFlashClockRestore(void);
  39:Generated_Source\PSoC4/CyFlash.c **** #if(CY_IP_SPCIF_SYNCHRONOUS)
  40:Generated_Source\PSoC4/CyFlash.c ****     static cystatus CySysFlashClockConfig(void);
  41:Generated_Source\PSoC4/CyFlash.c **** #endif  /* (CY_IP_SPCIF_SYNCHRONOUS) */
  42:Generated_Source\PSoC4/CyFlash.c **** 
  43:Generated_Source\PSoC4/CyFlash.c **** 
  44:Generated_Source\PSoC4/CyFlash.c **** /*******************************************************************************
  45:Generated_Source\PSoC4/CyFlash.c **** * Function Name: CySysFlashWriteRow
  46:Generated_Source\PSoC4/CyFlash.c **** ****************************************************************************//**
  47:Generated_Source\PSoC4/CyFlash.c **** *
  48:Generated_Source\PSoC4/CyFlash.c **** * Erases a row of Flash and programs it with the new data.
  49:Generated_Source\PSoC4/CyFlash.c **** *
  50:Generated_Source\PSoC4/CyFlash.c **** * The IMO must be enabled before calling this function. The operation of the
  51:Generated_Source\PSoC4/CyFlash.c **** * flash writing hardware is dependent on the IMO.
  52:Generated_Source\PSoC4/CyFlash.c **** *
  53:Generated_Source\PSoC4/CyFlash.c **** * For PSoC 4000, PSoC 4100 BLE and PSoC 4200 BLE devices (PSoC 4100 BLE and
  54:Generated_Source\PSoC4/CyFlash.c **** * PSoC 4200 BLE devices with 256K of Flash memory are not affected), this API
  55:Generated_Source\PSoC4/CyFlash.c **** * will automatically modify the clock settings for the device. Writing to
  56:Generated_Source\PSoC4/CyFlash.c **** * flash requires that changes be made to the IMO and HFCLK settings. The
  57:Generated_Source\PSoC4/CyFlash.c **** * configuration is restored before returning. This will impact the operation
  58:Generated_Source\PSoC4/CyFlash.c **** * of most of the hardware in the device.
  59:Generated_Source\PSoC4/CyFlash.c **** *
  60:Generated_Source\PSoC4/CyFlash.c **** * For PSoC 4000 devices this API will automatically modify the clock settings
  61:Generated_Source\PSoC4/CyFlash.c **** * for the device. Writing to flash requires that changes be made to the IMO
  62:Generated_Source\PSoC4/CyFlash.c **** * and HFCLK settings. The configuration is restored before returning. HFCLK
  63:Generated_Source\PSoC4/CyFlash.c **** * will have several frequency changes during the operation of this API between
  64:Generated_Source\PSoC4/CyFlash.c **** * a minimum frequency of the current IMO frequency divided by 8 and a maximum
  65:Generated_Source\PSoC4/CyFlash.c **** * frequency of 12 MHz. This will impact the operation of most of the hardware
  66:Generated_Source\PSoC4/CyFlash.c **** * in the device.
  67:Generated_Source\PSoC4/CyFlash.c **** *
  68:Generated_Source\PSoC4/CyFlash.c **** * \param rowNum The flash row number. The number of the flash rows is defined by
  69:Generated_Source\PSoC4/CyFlash.c **** * the \ref CY_FLASH_NUMBER_ROWS macro for the selected device. Refer to the
  70:Generated_Source\PSoC4/CyFlash.c **** * device datasheet for the details.
  71:Generated_Source\PSoC4/CyFlash.c **** * \note The target flash array is calculated based on the specified flash row.
  72:Generated_Source\PSoC4/CyFlash.c **** *
  73:Generated_Source\PSoC4/CyFlash.c **** * \param rowData Array of bytes to write. The size of the array must be equal to
  74:Generated_Source\PSoC4/CyFlash.c **** * the flash row size. The flash row size for the selected device is defined by
  75:Generated_Source\PSoC4/CyFlash.c **** * the \ref CY_FLASH_SIZEOF_ROW macro. Refer to the device datasheet for the
  76:Generated_Source\PSoC4/CyFlash.c **** * details.
  77:Generated_Source\PSoC4/CyFlash.c **** *
  78:Generated_Source\PSoC4/CyFlash.c **** * \return \ref group_flash_status_codes
  79:Generated_Source\PSoC4/CyFlash.c **** *
ARM GAS  C:\Users\Toshiba\AppData\Local\Temp\ccSNWM24.s 			page 3


  80:Generated_Source\PSoC4/CyFlash.c **** *******************************************************************************/
  81:Generated_Source\PSoC4/CyFlash.c **** uint32 CySysFlashWriteRow(uint32 rowNum, const uint8 rowData[])
  82:Generated_Source\PSoC4/CyFlash.c **** {
  32              		.loc 1 82 0
  33              		.cfi_startproc
  34              		@ args = 0, pretend = 0, frame = 160
  35              		@ frame_needed = 1, uses_anonymous_args = 0
  36 0000 90B5     		push	{r4, r7, lr}
  37              		.cfi_def_cfa_offset 12
  38              		.cfi_offset 4, -12
  39              		.cfi_offset 7, -8
  40              		.cfi_offset 14, -4
  41 0002 A9B0     		sub	sp, sp, #164
  42              		.cfi_def_cfa_offset 176
  43 0004 00AF     		add	r7, sp, #0
  44              		.cfi_def_cfa_register 7
  45 0006 7860     		str	r0, [r7, #4]
  46 0008 3960     		str	r1, [r7]
  83:Generated_Source\PSoC4/CyFlash.c ****     volatile uint32 retValue = CY_SYS_FLASH_SUCCESS;
  47              		.loc 1 83 0
  48 000a 0023     		movs	r3, #0
  49 000c 9822     		movs	r2, #152
  50 000e BA18     		adds	r2, r7, r2
  51 0010 1360     		str	r3, [r2]
  84:Generated_Source\PSoC4/CyFlash.c ****     volatile uint32 clkCnfRetValue = CY_SYS_FLASH_SUCCESS;
  52              		.loc 1 84 0
  53 0012 0023     		movs	r3, #0
  54 0014 9422     		movs	r2, #148
  55 0016 BA18     		adds	r2, r7, r2
  56 0018 1360     		str	r3, [r2]
  85:Generated_Source\PSoC4/CyFlash.c ****     volatile uint32 parameters[(CY_FLASH_SIZEOF_ROW + CY_FLASH_SRAM_ROM_DATA) / sizeof(uint32)];
  86:Generated_Source\PSoC4/CyFlash.c ****     uint8  interruptState;
  87:Generated_Source\PSoC4/CyFlash.c **** 
  88:Generated_Source\PSoC4/CyFlash.c ****     #if (CY_FLASH_CHECKSUM_WORKAROUND)
  89:Generated_Source\PSoC4/CyFlash.c ****         uint32 needChecksumWorkaround = 0u;
  90:Generated_Source\PSoC4/CyFlash.c ****         uint32 savedIndex = 0u;
  91:Generated_Source\PSoC4/CyFlash.c ****         uint32 savedValue = 0u;
  92:Generated_Source\PSoC4/CyFlash.c ****         uint32 checksum = 0u;
  93:Generated_Source\PSoC4/CyFlash.c ****         uint32 bits = 0u;
  94:Generated_Source\PSoC4/CyFlash.c ****         uint32 i;
  95:Generated_Source\PSoC4/CyFlash.c ****     #endif  /* (CY_FLASH_CHECKSUM_WORKAROUND) */
  96:Generated_Source\PSoC4/CyFlash.c **** 
  97:Generated_Source\PSoC4/CyFlash.c ****     if ((rowNum < CY_FLASH_NUMBER_ROWS) && (rowData != 0u))
  57              		.loc 1 97 0
  58 001a 7B68     		ldr	r3, [r7, #4]
  59 001c 604A     		ldr	r2, .L19
  60 001e 9342     		cmp	r3, r2
  61 0020 00D9     		bls	.LCB26
  62 0022 B1E0     		b	.L2	@long jump
  63              	.LCB26:
  64              		.loc 1 97 0 is_stmt 0 discriminator 1
  65 0024 3B68     		ldr	r3, [r7]
  66 0026 002B     		cmp	r3, #0
  67 0028 00D1     		bne	.LCB29
  68 002a ADE0     		b	.L2	@long jump
  69              	.LCB29:
  98:Generated_Source\PSoC4/CyFlash.c ****     {
ARM GAS  C:\Users\Toshiba\AppData\Local\Temp\ccSNWM24.s 			page 4


  99:Generated_Source\PSoC4/CyFlash.c ****         /* Copy data to be written into internal variable */
 100:Generated_Source\PSoC4/CyFlash.c ****         (void)memcpy((void *)&parameters[2u], rowData, CY_FLASH_SIZEOF_ROW);
  70              		.loc 1 100 0 is_stmt 1
  71 002c 3968     		ldr	r1, [r7]
  72 002e 0C23     		movs	r3, #12
  73 0030 FB18     		adds	r3, r7, r3
  74 0032 0833     		adds	r3, r3, #8
  75 0034 8022     		movs	r2, #128
  76 0036 1800     		movs	r0, r3
  77 0038 FFF7FEFF 		bl	memcpy
 101:Generated_Source\PSoC4/CyFlash.c **** 
 102:Generated_Source\PSoC4/CyFlash.c ****         #if (CY_FLASH_CHECKSUM_WORKAROUND)
 103:Generated_Source\PSoC4/CyFlash.c **** 
 104:Generated_Source\PSoC4/CyFlash.c ****             for (i = 2u; i < ((CY_FLASH_SIZEOF_ROW / sizeof(uint32)) + 2u); i++)
 105:Generated_Source\PSoC4/CyFlash.c ****             {
 106:Generated_Source\PSoC4/CyFlash.c ****                 uint32 tmp = parameters[i];
 107:Generated_Source\PSoC4/CyFlash.c ****                 if (tmp != 0u)
 108:Generated_Source\PSoC4/CyFlash.c ****                 {
 109:Generated_Source\PSoC4/CyFlash.c ****                     checksum += tmp;
 110:Generated_Source\PSoC4/CyFlash.c ****                     bits |= tmp;
 111:Generated_Source\PSoC4/CyFlash.c ****                     savedIndex = i;
 112:Generated_Source\PSoC4/CyFlash.c ****                 }
 113:Generated_Source\PSoC4/CyFlash.c ****             }
 114:Generated_Source\PSoC4/CyFlash.c **** 
 115:Generated_Source\PSoC4/CyFlash.c ****             needChecksumWorkaround = ((checksum == 0u) && (bits != 0u)) ? 1u : 0u;
 116:Generated_Source\PSoC4/CyFlash.c ****             if (needChecksumWorkaround != 0u)
 117:Generated_Source\PSoC4/CyFlash.c ****             {
 118:Generated_Source\PSoC4/CyFlash.c ****                 savedValue = parameters[savedIndex];
 119:Generated_Source\PSoC4/CyFlash.c ****                 parameters[savedIndex] = 0u;
 120:Generated_Source\PSoC4/CyFlash.c ****             }
 121:Generated_Source\PSoC4/CyFlash.c ****         #endif  /* (CY_FLASH_CHECKSUM_WORKAROUND) */
 122:Generated_Source\PSoC4/CyFlash.c **** 
 123:Generated_Source\PSoC4/CyFlash.c ****         /* Load Flash Bytes */
 124:Generated_Source\PSoC4/CyFlash.c ****         parameters[0u] = (uint32) (CY_FLASH_GET_MACRO_FROM_ROW(rowNum)        << CY_FLASH_PARAM_MAC
 125:Generated_Source\PSoC4/CyFlash.c ****                          (uint32) (CY_FLASH_PAGE_LATCH_START_ADDR             << CY_FLASH_PARAM_ADD
 126:Generated_Source\PSoC4/CyFlash.c ****                          (uint32) (CY_FLASH_KEY_TWO(CY_FLASH_API_OPCODE_LOAD) << CY_FLASH_PARAM_KEY
  78              		.loc 1 126 0
  79 003c 7B68     		ldr	r3, [r7, #4]
  80 003e 594A     		ldr	r2, .L19+4
  81 0040 9342     		cmp	r3, r2
  82 0042 01D9     		bls	.L3
  83              		.loc 1 126 0 is_stmt 0 discriminator 1
  84 0044 584A     		ldr	r2, .L19+8
  85 0046 00E0     		b	.L4
  86              	.L3:
  87              		.loc 1 126 0 discriminator 2
  88 0048 584A     		ldr	r2, .L19+12
  89              	.L4:
 124:Generated_Source\PSoC4/CyFlash.c ****                          (uint32) (CY_FLASH_PAGE_LATCH_START_ADDR             << CY_FLASH_PARAM_ADD
  90              		.loc 1 124 0 is_stmt 1
  91 004a 0C23     		movs	r3, #12
  92 004c FB18     		adds	r3, r7, r3
  93 004e 1A60     		str	r2, [r3]
 127:Generated_Source\PSoC4/CyFlash.c ****                          CY_FLASH_KEY_ONE;
 128:Generated_Source\PSoC4/CyFlash.c ****         parameters[1u] = CY_FLASH_SIZEOF_ROW - 1u;
  94              		.loc 1 128 0
  95 0050 0C23     		movs	r3, #12
ARM GAS  C:\Users\Toshiba\AppData\Local\Temp\ccSNWM24.s 			page 5


  96 0052 FB18     		adds	r3, r7, r3
  97 0054 7F22     		movs	r2, #127
  98 0056 5A60     		str	r2, [r3, #4]
 129:Generated_Source\PSoC4/CyFlash.c **** 
 130:Generated_Source\PSoC4/CyFlash.c ****         CY_FLASH_CPUSS_SYSARG_REG = (uint32) &parameters[0u];
  99              		.loc 1 130 0
 100 0058 554B     		ldr	r3, .L19+16
 101 005a 0C22     		movs	r2, #12
 102 005c BA18     		adds	r2, r7, r2
 103 005e 1A60     		str	r2, [r3]
 131:Generated_Source\PSoC4/CyFlash.c ****         CY_FLASH_CPUSS_SYSREQ_REG = CY_FLASH_CPUSS_REQ_START | CY_FLASH_API_OPCODE_LOAD;
 104              		.loc 1 131 0
 105 0060 544B     		ldr	r3, .L19+20
 106 0062 554A     		ldr	r2, .L19+24
 107 0064 1A60     		str	r2, [r3]
 132:Generated_Source\PSoC4/CyFlash.c ****         CY_NOP;
 108              		.loc 1 132 0
 109              		.syntax divided
 110              	@ 132 "Generated_Source\PSoC4\CyFlash.c" 1
 111 0066 C046     		NOP
 112              	
 113              	@ 0 "" 2
 133:Generated_Source\PSoC4/CyFlash.c ****         retValue = CY_FLASH_API_RETURN;
 114              		.loc 1 133 0
 115              		.thumb
 116              		.syntax unified
 117 0068 514B     		ldr	r3, .L19+16
 118 006a 1B68     		ldr	r3, [r3]
 119 006c 1B0F     		lsrs	r3, r3, #28
 120 006e 1A07     		lsls	r2, r3, #28
 121 0070 F023     		movs	r3, #240
 122 0072 1B06     		lsls	r3, r3, #24
 123 0074 9A42     		cmp	r2, r3
 124 0076 04D1     		bne	.L5
 125              		.loc 1 133 0 is_stmt 0 discriminator 1
 126 0078 4D4B     		ldr	r3, .L19+16
 127 007a 1B68     		ldr	r3, [r3]
 128 007c FF22     		movs	r2, #255
 129 007e 1340     		ands	r3, r2
 130 0080 0DE0     		b	.L6
 131              	.L5:
 132              		.loc 1 133 0 discriminator 2
 133 0082 4B4B     		ldr	r3, .L19+16
 134 0084 1B68     		ldr	r3, [r3]
 135 0086 1B0F     		lsrs	r3, r3, #28
 136 0088 1A07     		lsls	r2, r3, #28
 137 008a A023     		movs	r3, #160
 138 008c 1B06     		lsls	r3, r3, #24
 139 008e 9A42     		cmp	r2, r3
 140 0090 04D0     		beq	.L7
 141              		.loc 1 133 0 discriminator 4
 142 0092 474B     		ldr	r3, .L19+16
 143 0094 1B68     		ldr	r3, [r3]
 144 0096 FF22     		movs	r2, #255
 145 0098 1340     		ands	r3, r2
 146 009a 00E0     		b	.L6
 147              	.L7:
ARM GAS  C:\Users\Toshiba\AppData\Local\Temp\ccSNWM24.s 			page 6


 148              		.loc 1 133 0 discriminator 5
 149 009c 0023     		movs	r3, #0
 150              	.L6:
 151              		.loc 1 133 0 discriminator 8
 152 009e 9822     		movs	r2, #152
 153 00a0 BA18     		adds	r2, r7, r2
 154 00a2 1360     		str	r3, [r2]
 134:Generated_Source\PSoC4/CyFlash.c **** 
 135:Generated_Source\PSoC4/CyFlash.c ****         if(retValue == CY_SYS_FLASH_SUCCESS)
 155              		.loc 1 135 0 is_stmt 1 discriminator 8
 156 00a4 9823     		movs	r3, #152
 157 00a6 FB18     		adds	r3, r7, r3
 158 00a8 1B68     		ldr	r3, [r3]
 159 00aa 002B     		cmp	r3, #0
 160 00ac 00D0     		beq	.LCB106
 161 00ae 6FE0     		b	.L17	@long jump
 162              	.LCB106:
 136:Generated_Source\PSoC4/CyFlash.c ****         {
 137:Generated_Source\PSoC4/CyFlash.c ****             /***************************************************************
 138:Generated_Source\PSoC4/CyFlash.c ****             * Mask all the exceptions to guarantee that Flash write will
 139:Generated_Source\PSoC4/CyFlash.c ****             * occur in the atomic way. It will not affect system call
 140:Generated_Source\PSoC4/CyFlash.c ****             * execution (flash row write) since it is executed in the NMI
 141:Generated_Source\PSoC4/CyFlash.c ****             * context.
 142:Generated_Source\PSoC4/CyFlash.c ****             ***************************************************************/
 143:Generated_Source\PSoC4/CyFlash.c ****             interruptState = CyEnterCriticalSection();
 163              		.loc 1 143 0
 164 00b0 9F23     		movs	r3, #159
 165 00b2 FC18     		adds	r4, r7, r3
 166 00b4 FFF7FEFF 		bl	CyEnterCriticalSection
 167 00b8 0300     		movs	r3, r0
 168 00ba 2370     		strb	r3, [r4]
 144:Generated_Source\PSoC4/CyFlash.c **** 
 145:Generated_Source\PSoC4/CyFlash.c ****             clkCnfRetValue = CySysFlashClockBackup();
 169              		.loc 1 145 0
 170 00bc FFF7FEFF 		bl	CySysFlashClockBackup
 171 00c0 0300     		movs	r3, r0
 172 00c2 9422     		movs	r2, #148
 173 00c4 BA18     		adds	r2, r7, r2
 174 00c6 1360     		str	r3, [r2]
 146:Generated_Source\PSoC4/CyFlash.c **** 
 147:Generated_Source\PSoC4/CyFlash.c ****         #if(CY_IP_SPCIF_SYNCHRONOUS)
 148:Generated_Source\PSoC4/CyFlash.c ****             if(clkCnfRetValue == CY_SYS_FLASH_SUCCESS)
 175              		.loc 1 148 0
 176 00c8 9423     		movs	r3, #148
 177 00ca FB18     		adds	r3, r7, r3
 178 00cc 1B68     		ldr	r3, [r3]
 179 00ce 002B     		cmp	r3, #0
 180 00d0 05D1     		bne	.L10
 149:Generated_Source\PSoC4/CyFlash.c ****             {
 150:Generated_Source\PSoC4/CyFlash.c ****                 retValue = CySysFlashClockConfig();
 181              		.loc 1 150 0
 182 00d2 FFF7FEFF 		bl	CySysFlashClockConfig
 183 00d6 0300     		movs	r3, r0
 184 00d8 9822     		movs	r2, #152
 185 00da BA18     		adds	r2, r7, r2
 186 00dc 1360     		str	r3, [r2]
 187              	.L10:
ARM GAS  C:\Users\Toshiba\AppData\Local\Temp\ccSNWM24.s 			page 7


 151:Generated_Source\PSoC4/CyFlash.c ****             }
 152:Generated_Source\PSoC4/CyFlash.c ****         #endif  /* (CY_IP_SPCIF_SYNCHRONOUS) */
 153:Generated_Source\PSoC4/CyFlash.c **** 
 154:Generated_Source\PSoC4/CyFlash.c ****             if(retValue == CY_SYS_FLASH_SUCCESS)
 188              		.loc 1 154 0
 189 00de 9823     		movs	r3, #152
 190 00e0 FB18     		adds	r3, r7, r3
 191 00e2 1B68     		ldr	r3, [r3]
 192 00e4 002B     		cmp	r3, #0
 193 00e6 32D1     		bne	.L11
 155:Generated_Source\PSoC4/CyFlash.c ****             {
 156:Generated_Source\PSoC4/CyFlash.c ****                 /* Write Row */
 157:Generated_Source\PSoC4/CyFlash.c ****                 parameters[0u]  = (uint32) (((uint32) CY_FLASH_KEY_TWO(CY_FLASH_API_OPCODE_WRITE_RO
 194              		.loc 1 157 0
 195 00e8 0C23     		movs	r3, #12
 196 00ea FB18     		adds	r3, r7, r3
 197 00ec 334A     		ldr	r2, .L19+28
 198 00ee 1A60     		str	r2, [r3]
 158:Generated_Source\PSoC4/CyFlash.c ****                 parameters[0u] |= (uint32)(rowNum << 16u);
 199              		.loc 1 158 0
 200 00f0 0C23     		movs	r3, #12
 201 00f2 FB18     		adds	r3, r7, r3
 202 00f4 1A68     		ldr	r2, [r3]
 203 00f6 7B68     		ldr	r3, [r7, #4]
 204 00f8 1B04     		lsls	r3, r3, #16
 205 00fa 1A43     		orrs	r2, r3
 206 00fc 0C23     		movs	r3, #12
 207 00fe FB18     		adds	r3, r7, r3
 208 0100 1A60     		str	r2, [r3]
 159:Generated_Source\PSoC4/CyFlash.c **** 
 160:Generated_Source\PSoC4/CyFlash.c ****                 CY_FLASH_CPUSS_SYSARG_REG = (uint32) &parameters[0u];
 209              		.loc 1 160 0
 210 0102 2B4B     		ldr	r3, .L19+16
 211 0104 0C22     		movs	r2, #12
 212 0106 BA18     		adds	r2, r7, r2
 213 0108 1A60     		str	r2, [r3]
 161:Generated_Source\PSoC4/CyFlash.c ****                 CY_FLASH_CPUSS_SYSREQ_REG = CY_FLASH_CPUSS_REQ_START | CY_FLASH_API_OPCODE_WRITE_RO
 214              		.loc 1 161 0
 215 010a 2A4B     		ldr	r3, .L19+20
 216 010c 2C4A     		ldr	r2, .L19+32
 217 010e 1A60     		str	r2, [r3]
 162:Generated_Source\PSoC4/CyFlash.c ****                 CY_NOP;
 218              		.loc 1 162 0
 219              		.syntax divided
 220              	@ 162 "Generated_Source\PSoC4\CyFlash.c" 1
 221 0110 C046     		NOP
 222              	
 223              	@ 0 "" 2
 163:Generated_Source\PSoC4/CyFlash.c ****                 retValue = CY_FLASH_API_RETURN;
 224              		.loc 1 163 0
 225              		.thumb
 226              		.syntax unified
 227 0112 274B     		ldr	r3, .L19+16
 228 0114 1B68     		ldr	r3, [r3]
 229 0116 1B0F     		lsrs	r3, r3, #28
 230 0118 1A07     		lsls	r2, r3, #28
 231 011a F023     		movs	r3, #240
ARM GAS  C:\Users\Toshiba\AppData\Local\Temp\ccSNWM24.s 			page 8


 232 011c 1B06     		lsls	r3, r3, #24
 233 011e 9A42     		cmp	r2, r3
 234 0120 04D1     		bne	.L12
 235              		.loc 1 163 0 is_stmt 0 discriminator 1
 236 0122 234B     		ldr	r3, .L19+16
 237 0124 1B68     		ldr	r3, [r3]
 238 0126 FF22     		movs	r2, #255
 239 0128 1340     		ands	r3, r2
 240 012a 0DE0     		b	.L13
 241              	.L12:
 242              		.loc 1 163 0 discriminator 2
 243 012c 204B     		ldr	r3, .L19+16
 244 012e 1B68     		ldr	r3, [r3]
 245 0130 1B0F     		lsrs	r3, r3, #28
 246 0132 1A07     		lsls	r2, r3, #28
 247 0134 A023     		movs	r3, #160
 248 0136 1B06     		lsls	r3, r3, #24
 249 0138 9A42     		cmp	r2, r3
 250 013a 04D0     		beq	.L14
 251              		.loc 1 163 0 discriminator 4
 252 013c 1C4B     		ldr	r3, .L19+16
 253 013e 1B68     		ldr	r3, [r3]
 254 0140 FF22     		movs	r2, #255
 255 0142 1340     		ands	r3, r2
 256 0144 00E0     		b	.L13
 257              	.L14:
 258              		.loc 1 163 0 discriminator 5
 259 0146 0023     		movs	r3, #0
 260              	.L13:
 261              		.loc 1 163 0 discriminator 8
 262 0148 9822     		movs	r2, #152
 263 014a BA18     		adds	r2, r7, r2
 264 014c 1360     		str	r3, [r2]
 265              	.L11:
 164:Generated_Source\PSoC4/CyFlash.c ****             }
 165:Generated_Source\PSoC4/CyFlash.c **** 
 166:Generated_Source\PSoC4/CyFlash.c ****             #if (CY_FLASH_CHECKSUM_WORKAROUND)
 167:Generated_Source\PSoC4/CyFlash.c **** 
 168:Generated_Source\PSoC4/CyFlash.c ****                 if ((retValue == CYRET_SUCCESS) && (needChecksumWorkaround != 0u))
 169:Generated_Source\PSoC4/CyFlash.c ****                 {
 170:Generated_Source\PSoC4/CyFlash.c ****                     (void)memset((void *)&parameters[2u], 0, CY_FLASH_SIZEOF_ROW);
 171:Generated_Source\PSoC4/CyFlash.c ****                     parameters[savedIndex] = savedValue;
 172:Generated_Source\PSoC4/CyFlash.c **** 
 173:Generated_Source\PSoC4/CyFlash.c ****                     /* Load Flash Bytes */
 174:Generated_Source\PSoC4/CyFlash.c ****                     parameters[0u] = (uint32) (CY_FLASH_GET_MACRO_FROM_ROW(rowNum)        << CY_FLA
 175:Generated_Source\PSoC4/CyFlash.c ****                                      (uint32) (CY_FLASH_PAGE_LATCH_START_ADDR             << CY_FLA
 176:Generated_Source\PSoC4/CyFlash.c ****                                      (uint32) (CY_FLASH_KEY_TWO(CY_FLASH_API_OPCODE_LOAD) << CY_FLA
 177:Generated_Source\PSoC4/CyFlash.c ****                                      CY_FLASH_KEY_ONE;
 178:Generated_Source\PSoC4/CyFlash.c ****                     parameters[1u] = CY_FLASH_SIZEOF_ROW - 1u;
 179:Generated_Source\PSoC4/CyFlash.c **** 
 180:Generated_Source\PSoC4/CyFlash.c ****                     CY_FLASH_CPUSS_SYSARG_REG = (uint32) &parameters[0u];
 181:Generated_Source\PSoC4/CyFlash.c ****                     CY_FLASH_CPUSS_SYSREQ_REG = CY_FLASH_CPUSS_REQ_START | CY_FLASH_API_OPCODE_LOAD
 182:Generated_Source\PSoC4/CyFlash.c ****                     CY_NOP;
 183:Generated_Source\PSoC4/CyFlash.c ****                     retValue = CY_FLASH_API_RETURN;
 184:Generated_Source\PSoC4/CyFlash.c **** 
 185:Generated_Source\PSoC4/CyFlash.c **** 
 186:Generated_Source\PSoC4/CyFlash.c ****                     if(retValue == CY_SYS_FLASH_SUCCESS)
ARM GAS  C:\Users\Toshiba\AppData\Local\Temp\ccSNWM24.s 			page 9


 187:Generated_Source\PSoC4/CyFlash.c ****                     {
 188:Generated_Source\PSoC4/CyFlash.c ****                         /* Program Row */
 189:Generated_Source\PSoC4/CyFlash.c ****                         parameters[0u]  =
 190:Generated_Source\PSoC4/CyFlash.c ****                             (uint32) (((uint32) CY_FLASH_KEY_TWO(CY_FLASH_API_OPCODE_PROGRAM_ROW) <
 191:Generated_Source\PSoC4/CyFlash.c ****                                                     CY_FLASH_PARAM_KEY_TWO_OFFSET) | CY_FLASH_KEY_O
 192:Generated_Source\PSoC4/CyFlash.c ****                         parameters[0u] |= (uint32)(rowNum << 16u);
 193:Generated_Source\PSoC4/CyFlash.c **** 
 194:Generated_Source\PSoC4/CyFlash.c ****                         CY_FLASH_CPUSS_SYSARG_REG = (uint32) &parameters[0u];
 195:Generated_Source\PSoC4/CyFlash.c ****                         CY_FLASH_CPUSS_SYSREQ_REG = CY_FLASH_CPUSS_REQ_START | CY_FLASH_API_OPCODE_
 196:Generated_Source\PSoC4/CyFlash.c ****                         CY_NOP;
 197:Generated_Source\PSoC4/CyFlash.c ****                         retValue = CY_FLASH_API_RETURN;
 198:Generated_Source\PSoC4/CyFlash.c ****                     }
 199:Generated_Source\PSoC4/CyFlash.c ****                 }
 200:Generated_Source\PSoC4/CyFlash.c ****             #endif  /* (CY_FLASH_CHECKSUM_WORKAROUND) */
 201:Generated_Source\PSoC4/CyFlash.c **** 
 202:Generated_Source\PSoC4/CyFlash.c ****             if(clkCnfRetValue == CY_SYS_FLASH_SUCCESS)
 266              		.loc 1 202 0 is_stmt 1
 267 014e 9423     		movs	r3, #148
 268 0150 FB18     		adds	r3, r7, r3
 269 0152 1B68     		ldr	r3, [r3]
 270 0154 002B     		cmp	r3, #0
 271 0156 10D1     		bne	.L16
 203:Generated_Source\PSoC4/CyFlash.c ****             {
 204:Generated_Source\PSoC4/CyFlash.c ****                 clkCnfRetValue = CySysFlashClockRestore();
 272              		.loc 1 204 0
 273 0158 FFF7FEFF 		bl	CySysFlashClockRestore
 274 015c 0300     		movs	r3, r0
 275 015e 9422     		movs	r2, #148
 276 0160 BA18     		adds	r2, r7, r2
 277 0162 1360     		str	r3, [r2]
 205:Generated_Source\PSoC4/CyFlash.c **** 
 206:Generated_Source\PSoC4/CyFlash.c ****                 if(clkCnfRetValue != CY_SYS_FLASH_SUCCESS)
 278              		.loc 1 206 0
 279 0164 9423     		movs	r3, #148
 280 0166 FB18     		adds	r3, r7, r3
 281 0168 1B68     		ldr	r3, [r3]
 282 016a 002B     		cmp	r3, #0
 283 016c 05D0     		beq	.L16
 207:Generated_Source\PSoC4/CyFlash.c ****                 {
 208:Generated_Source\PSoC4/CyFlash.c ****                     retValue = clkCnfRetValue;
 284              		.loc 1 208 0
 285 016e 9423     		movs	r3, #148
 286 0170 FB18     		adds	r3, r7, r3
 287 0172 1B68     		ldr	r3, [r3]
 288 0174 9822     		movs	r2, #152
 289 0176 BA18     		adds	r2, r7, r2
 290 0178 1360     		str	r3, [r2]
 291              	.L16:
 209:Generated_Source\PSoC4/CyFlash.c ****                 }
 210:Generated_Source\PSoC4/CyFlash.c ****             }
 211:Generated_Source\PSoC4/CyFlash.c **** 
 212:Generated_Source\PSoC4/CyFlash.c ****             CyExitCriticalSection(interruptState);
 292              		.loc 1 212 0
 293 017a 9F23     		movs	r3, #159
 294 017c FB18     		adds	r3, r7, r3
 295 017e 1B78     		ldrb	r3, [r3]
 296 0180 1800     		movs	r0, r3
ARM GAS  C:\Users\Toshiba\AppData\Local\Temp\ccSNWM24.s 			page 10


 297 0182 FFF7FEFF 		bl	CyExitCriticalSection
 135:Generated_Source\PSoC4/CyFlash.c ****         {
 298              		.loc 1 135 0
 299 0186 03E0     		b	.L17
 300              	.L2:
 213:Generated_Source\PSoC4/CyFlash.c ****         }
 214:Generated_Source\PSoC4/CyFlash.c ****     }
 215:Generated_Source\PSoC4/CyFlash.c ****     else
 216:Generated_Source\PSoC4/CyFlash.c ****     {
 217:Generated_Source\PSoC4/CyFlash.c ****         retValue = CY_SYS_FLASH_INVALID_ADDR;
 301              		.loc 1 217 0
 302 0188 0423     		movs	r3, #4
 303 018a 9822     		movs	r2, #152
 304 018c BA18     		adds	r2, r7, r2
 305 018e 1360     		str	r3, [r2]
 306              	.L17:
 218:Generated_Source\PSoC4/CyFlash.c ****     }
 219:Generated_Source\PSoC4/CyFlash.c **** 
 220:Generated_Source\PSoC4/CyFlash.c ****     return (retValue);
 307              		.loc 1 220 0
 308 0190 9823     		movs	r3, #152
 309 0192 FB18     		adds	r3, r7, r3
 310 0194 1B68     		ldr	r3, [r3]
 221:Generated_Source\PSoC4/CyFlash.c **** }
 311              		.loc 1 221 0
 312 0196 1800     		movs	r0, r3
 313 0198 BD46     		mov	sp, r7
 314 019a 29B0     		add	sp, sp, #164
 315              		@ sp needed
 316 019c 90BD     		pop	{r4, r7, pc}
 317              	.L20:
 318 019e C046     		.align	2
 319              	.L19:
 320 01a0 FF030000 		.word	1023
 321 01a4 FF010000 		.word	511
 322 01a8 B6D70001 		.word	16832438
 323 01ac B6D70000 		.word	55222
 324 01b0 08001040 		.word	1074790408
 325 01b4 04001040 		.word	1074790404
 326 01b8 04000080 		.word	-2147483644
 327 01bc B6D80000 		.word	55478
 328 01c0 05000080 		.word	-2147483643
 329              		.cfi_endproc
 330              	.LFE2:
 331              		.size	CySysFlashWriteRow, .-CySysFlashWriteRow
 332              		.section	.text.CySysFlashSetWaitCycles,"ax",%progbits
 333              		.align	2
 334              		.global	CySysFlashSetWaitCycles
 335              		.code	16
 336              		.thumb_func
 337              		.type	CySysFlashSetWaitCycles, %function
 338              	CySysFlashSetWaitCycles:
 339              	.LFB3:
 222:Generated_Source\PSoC4/CyFlash.c **** 
 223:Generated_Source\PSoC4/CyFlash.c **** 
 224:Generated_Source\PSoC4/CyFlash.c **** 
 225:Generated_Source\PSoC4/CyFlash.c **** #if (CY_IP_FLASH_PARALLEL_PGM_EN && (CY_IP_FLASH_MACROS > 1u))
ARM GAS  C:\Users\Toshiba\AppData\Local\Temp\ccSNWM24.s 			page 11


 226:Generated_Source\PSoC4/CyFlash.c **** /*******************************************************************************
 227:Generated_Source\PSoC4/CyFlash.c **** * Function Name: CySysFlashStartWriteRow
 228:Generated_Source\PSoC4/CyFlash.c **** ****************************************************************************//**
 229:Generated_Source\PSoC4/CyFlash.c **** *
 230:Generated_Source\PSoC4/CyFlash.c **** * Initiates a write to a row of Flash. A call to this API is non-blocking. 
 231:Generated_Source\PSoC4/CyFlash.c **** * Use CySysFlashResumeWriteRow() to resume flash writes and 
 232:Generated_Source\PSoC4/CyFlash.c **** * CySysFlashGetWriteRowStatus() to ascertain status of the write operation.
 233:Generated_Source\PSoC4/CyFlash.c **** *
 234:Generated_Source\PSoC4/CyFlash.c **** * The devices require HFCLK to be sourced by 48 MHz IMO during flash write.
 235:Generated_Source\PSoC4/CyFlash.c **** * This API will modify IMO configuration; it can be later restored to original
 236:Generated_Source\PSoC4/CyFlash.c **** * configuration by calling \ref CySysFlashGetWriteRowStatus().
 237:Generated_Source\PSoC4/CyFlash.c **** *
 238:Generated_Source\PSoC4/CyFlash.c **** * \note The non-blocking operation does not return success status 
 239:Generated_Source\PSoC4/CyFlash.c **** * CY_SYS_FLASH_SUCCESS until the last \ref CySysFlashResumeWriteRow API 
 240:Generated_Source\PSoC4/CyFlash.c **** * is complete. The CPUSS_SYSARG register will be reflecting the SRAM address 
 241:Generated_Source\PSoC4/CyFlash.c **** * during an ongoing non-blocking operation.
 242:Generated_Source\PSoC4/CyFlash.c **** *    
 243:Generated_Source\PSoC4/CyFlash.c **** * \param rowNum The flash row number. The number of the flash rows is defined by
 244:Generated_Source\PSoC4/CyFlash.c **** * the \ref CY_FLASH_NUMBER_ROWS macro for the selected device. Refer to the
 245:Generated_Source\PSoC4/CyFlash.c **** * device datasheet for the details.
 246:Generated_Source\PSoC4/CyFlash.c **** * \note The target flash array is calculated based on the specified flash row.
 247:Generated_Source\PSoC4/CyFlash.c **** *
 248:Generated_Source\PSoC4/CyFlash.c **** * \param rowData Array of bytes to write. The size of the array must be equal to
 249:Generated_Source\PSoC4/CyFlash.c **** * the flash row size. The flash row size for the selected device is defined by
 250:Generated_Source\PSoC4/CyFlash.c **** * the \ref CY_FLASH_SIZEOF_ROW macro. Refer to the device datasheet for the
 251:Generated_Source\PSoC4/CyFlash.c **** * details.
 252:Generated_Source\PSoC4/CyFlash.c **** *
 253:Generated_Source\PSoC4/CyFlash.c **** * \return \ref group_flash_status_codes
 254:Generated_Source\PSoC4/CyFlash.c **** *
 255:Generated_Source\PSoC4/CyFlash.c **** *******************************************************************************/
 256:Generated_Source\PSoC4/CyFlash.c **** uint32 CySysFlashStartWriteRow(uint32 rowNum, const uint8 rowData[])
 257:Generated_Source\PSoC4/CyFlash.c **** {
 258:Generated_Source\PSoC4/CyFlash.c ****     volatile uint32 retValue = CY_SYS_FLASH_SUCCESS;
 259:Generated_Source\PSoC4/CyFlash.c ****     volatile uint32 parameters[(CY_FLASH_SIZEOF_ROW + CY_FLASH_SRAM_ROM_DATA) / sizeof(uint32)];
 260:Generated_Source\PSoC4/CyFlash.c ****     uint8  interruptState;
 261:Generated_Source\PSoC4/CyFlash.c **** 
 262:Generated_Source\PSoC4/CyFlash.c **** #if(CY_IP_SPCIF_SYNCHRONOUS)
 263:Generated_Source\PSoC4/CyFlash.c ****     volatile uint32 clkCnfRetValue = CY_SYS_FLASH_SUCCESS;
 264:Generated_Source\PSoC4/CyFlash.c **** #endif  /* (CY_IP_SPCIF_SYNCHRONOUS) */    
 265:Generated_Source\PSoC4/CyFlash.c **** 
 266:Generated_Source\PSoC4/CyFlash.c ****     if ((rowNum < CY_FLASH_NUMBER_ROWS) && (rowData != 0u))
 267:Generated_Source\PSoC4/CyFlash.c ****     {
 268:Generated_Source\PSoC4/CyFlash.c ****         /* Copy data to be written into internal variable */
 269:Generated_Source\PSoC4/CyFlash.c ****         (void)memcpy((void *)&parameters[2u], rowData, CY_FLASH_SIZEOF_ROW);
 270:Generated_Source\PSoC4/CyFlash.c **** 
 271:Generated_Source\PSoC4/CyFlash.c ****         /* Load Flash Bytes */
 272:Generated_Source\PSoC4/CyFlash.c ****         parameters[0u] = (uint32) (CY_FLASH_GET_MACRO_FROM_ROW(rowNum)        << CY_FLASH_PARAM_MAC
 273:Generated_Source\PSoC4/CyFlash.c ****                          (uint32) (CY_FLASH_PAGE_LATCH_START_ADDR             << CY_FLASH_PARAM_ADD
 274:Generated_Source\PSoC4/CyFlash.c ****                          (uint32) (CY_FLASH_KEY_TWO(CY_FLASH_API_OPCODE_LOAD) << CY_FLASH_PARAM_KEY
 275:Generated_Source\PSoC4/CyFlash.c ****                          CY_FLASH_KEY_ONE;
 276:Generated_Source\PSoC4/CyFlash.c ****         parameters[1u] = CY_FLASH_SIZEOF_ROW - 1u;
 277:Generated_Source\PSoC4/CyFlash.c **** 
 278:Generated_Source\PSoC4/CyFlash.c ****         CY_FLASH_CPUSS_SYSARG_REG = (uint32) &parameters[0u];
 279:Generated_Source\PSoC4/CyFlash.c ****         CY_FLASH_CPUSS_SYSREQ_REG = CY_FLASH_CPUSS_REQ_START | CY_FLASH_API_OPCODE_LOAD;
 280:Generated_Source\PSoC4/CyFlash.c ****         CY_NOP;
 281:Generated_Source\PSoC4/CyFlash.c ****         retValue = CY_FLASH_API_RETURN;
 282:Generated_Source\PSoC4/CyFlash.c **** 
ARM GAS  C:\Users\Toshiba\AppData\Local\Temp\ccSNWM24.s 			page 12


 283:Generated_Source\PSoC4/CyFlash.c ****         if(retValue == CY_SYS_FLASH_SUCCESS)
 284:Generated_Source\PSoC4/CyFlash.c ****         {
 285:Generated_Source\PSoC4/CyFlash.c ****             /***************************************************************
 286:Generated_Source\PSoC4/CyFlash.c ****             * Mask all the exceptions to guarantee that Flash write will
 287:Generated_Source\PSoC4/CyFlash.c ****             * occur in the atomic way. It will not affect system call
 288:Generated_Source\PSoC4/CyFlash.c ****             * execution (flash row write) since it is executed in the NMI
 289:Generated_Source\PSoC4/CyFlash.c ****             * context.
 290:Generated_Source\PSoC4/CyFlash.c ****             ***************************************************************/
 291:Generated_Source\PSoC4/CyFlash.c ****             interruptState = CyEnterCriticalSection();
 292:Generated_Source\PSoC4/CyFlash.c **** 
 293:Generated_Source\PSoC4/CyFlash.c ****         #if(CY_IP_SPCIF_SYNCHRONOUS)
 294:Generated_Source\PSoC4/CyFlash.c ****             clkCnfRetValue = CySysFlashClockBackup();
 295:Generated_Source\PSoC4/CyFlash.c ****             
 296:Generated_Source\PSoC4/CyFlash.c ****             if(clkCnfRetValue == CY_SYS_FLASH_SUCCESS)
 297:Generated_Source\PSoC4/CyFlash.c ****             {
 298:Generated_Source\PSoC4/CyFlash.c ****                 retValue = CySysFlashClockConfig();
 299:Generated_Source\PSoC4/CyFlash.c ****             }
 300:Generated_Source\PSoC4/CyFlash.c ****         #else
 301:Generated_Source\PSoC4/CyFlash.c ****             (void)CySysFlashClockBackup();
 302:Generated_Source\PSoC4/CyFlash.c ****         #endif  /* (CY_IP_SPCIF_SYNCHRONOUS) */
 303:Generated_Source\PSoC4/CyFlash.c **** 
 304:Generated_Source\PSoC4/CyFlash.c ****             if(retValue == CY_SYS_FLASH_SUCCESS)
 305:Generated_Source\PSoC4/CyFlash.c ****             {
 306:Generated_Source\PSoC4/CyFlash.c ****                 /* Non-blocking Write Row */
 307:Generated_Source\PSoC4/CyFlash.c ****                 parameters[0u]  = (uint32) (((uint32) CY_FLASH_KEY_TWO(CY_FLASH_API_OPCODE_NON_BLOC
 308:Generated_Source\PSoC4/CyFlash.c ****                                                         CY_FLASH_PARAM_KEY_TWO_OFFSET) | CY_FLASH_K
 309:Generated_Source\PSoC4/CyFlash.c ****                 parameters[0u] |= (uint32)(rowNum << 16u);
 310:Generated_Source\PSoC4/CyFlash.c **** 
 311:Generated_Source\PSoC4/CyFlash.c ****                 CY_FLASH_CPUSS_SYSARG_REG = (uint32) &parameters[0u];
 312:Generated_Source\PSoC4/CyFlash.c ****                 CY_FLASH_CPUSS_SYSREQ_REG = CY_FLASH_CPUSS_REQ_START | CY_FLASH_API_OPCODE_NON_BLOC
 313:Generated_Source\PSoC4/CyFlash.c ****                 CY_NOP;
 314:Generated_Source\PSoC4/CyFlash.c ****                 retValue = CY_FLASH_API_RETURN;
 315:Generated_Source\PSoC4/CyFlash.c ****             }
 316:Generated_Source\PSoC4/CyFlash.c **** 
 317:Generated_Source\PSoC4/CyFlash.c ****             CyExitCriticalSection(interruptState);
 318:Generated_Source\PSoC4/CyFlash.c ****         }
 319:Generated_Source\PSoC4/CyFlash.c ****     }
 320:Generated_Source\PSoC4/CyFlash.c ****     else
 321:Generated_Source\PSoC4/CyFlash.c ****     {
 322:Generated_Source\PSoC4/CyFlash.c ****         retValue = CY_SYS_FLASH_INVALID_ADDR;
 323:Generated_Source\PSoC4/CyFlash.c ****     }
 324:Generated_Source\PSoC4/CyFlash.c **** 
 325:Generated_Source\PSoC4/CyFlash.c ****     return (retValue);
 326:Generated_Source\PSoC4/CyFlash.c **** }
 327:Generated_Source\PSoC4/CyFlash.c **** 
 328:Generated_Source\PSoC4/CyFlash.c **** 
 329:Generated_Source\PSoC4/CyFlash.c **** /*******************************************************************************
 330:Generated_Source\PSoC4/CyFlash.c **** * Function Name: CySysFlashGetWriteRowStatus
 331:Generated_Source\PSoC4/CyFlash.c **** ****************************************************************************//**
 332:Generated_Source\PSoC4/CyFlash.c **** *
 333:Generated_Source\PSoC4/CyFlash.c **** * Returns the current status of the flash write operation.
 334:Generated_Source\PSoC4/CyFlash.c **** *
 335:Generated_Source\PSoC4/CyFlash.c **** ** \note The non-blocking operation does not return success status 
 336:Generated_Source\PSoC4/CyFlash.c **** * CY_SYS_FLASH_SUCCESS until the last \ref CySysFlashResumeWriteRow API 
 337:Generated_Source\PSoC4/CyFlash.c **** * is complete. The CPUSS_SYSARG register will be reflecting the SRAM address 
 338:Generated_Source\PSoC4/CyFlash.c **** * during an ongoing non-blocking operation.
 339:Generated_Source\PSoC4/CyFlash.c **** * Calling this API before starting a non-blocking write row operation 
ARM GAS  C:\Users\Toshiba\AppData\Local\Temp\ccSNWM24.s 			page 13


 340:Generated_Source\PSoC4/CyFlash.c **** * using the \ref CySysFlashStartWriteRow() API will cause improper operation.
 341:Generated_Source\PSoC4/CyFlash.c **** *
 342:Generated_Source\PSoC4/CyFlash.c **** * \return \ref group_flash_status_codes
 343:Generated_Source\PSoC4/CyFlash.c **** *
 344:Generated_Source\PSoC4/CyFlash.c **** *******************************************************************************/
 345:Generated_Source\PSoC4/CyFlash.c **** uint32 CySysFlashGetWriteRowStatus(void)
 346:Generated_Source\PSoC4/CyFlash.c **** {
 347:Generated_Source\PSoC4/CyFlash.c ****     volatile uint32 retValue = CY_SYS_FLASH_SUCCESS;
 348:Generated_Source\PSoC4/CyFlash.c **** 
 349:Generated_Source\PSoC4/CyFlash.c ****     CY_NOP;
 350:Generated_Source\PSoC4/CyFlash.c ****     retValue = CY_FLASH_API_RETURN;
 351:Generated_Source\PSoC4/CyFlash.c **** 
 352:Generated_Source\PSoC4/CyFlash.c ****     (void) CySysFlashClockRestore();
 353:Generated_Source\PSoC4/CyFlash.c **** 
 354:Generated_Source\PSoC4/CyFlash.c ****     return (retValue);
 355:Generated_Source\PSoC4/CyFlash.c **** }
 356:Generated_Source\PSoC4/CyFlash.c **** 
 357:Generated_Source\PSoC4/CyFlash.c **** 
 358:Generated_Source\PSoC4/CyFlash.c **** /*******************************************************************************
 359:Generated_Source\PSoC4/CyFlash.c **** * Function Name: CySysFlashResumeWriteRow
 360:Generated_Source\PSoC4/CyFlash.c **** ****************************************************************************//**
 361:Generated_Source\PSoC4/CyFlash.c **** *
 362:Generated_Source\PSoC4/CyFlash.c **** * This API must be called, once the SPC interrupt is triggered to complete the
 363:Generated_Source\PSoC4/CyFlash.c **** * non-blocking operation. It is advised not to prolong calling this API for
 364:Generated_Source\PSoC4/CyFlash.c **** * more than 25 ms.
 365:Generated_Source\PSoC4/CyFlash.c **** *
 366:Generated_Source\PSoC4/CyFlash.c **** * The non-blocking write row API \ref CySysFlashStartWriteRow() requires that
 367:Generated_Source\PSoC4/CyFlash.c **** * this API be called 3 times to complete the write. This can be done by
 368:Generated_Source\PSoC4/CyFlash.c **** * configuring SPCIF interrupt and placing a call to this API.
 369:Generated_Source\PSoC4/CyFlash.c **** *
 370:Generated_Source\PSoC4/CyFlash.c **** * For CM0 based device, a non-blocking call to program a row of macro 0
 371:Generated_Source\PSoC4/CyFlash.c **** * requires the user to set the CPUSS_CONFIG.VECS_IN_RAM bit so that the
 372:Generated_Source\PSoC4/CyFlash.c **** * interrupt vector for the SPC is fetched from the SRAM rather than the FLASH.
 373:Generated_Source\PSoC4/CyFlash.c **** *
 374:Generated_Source\PSoC4/CyFlash.c **** * For CM0+ based device, if the user wants to keep the vector table in flash
 375:Generated_Source\PSoC4/CyFlash.c **** * when performing non-blocking flash write then they need to make sure the
 376:Generated_Source\PSoC4/CyFlash.c **** * vector table is placed in the flash macro which is not getting programmed by
 377:Generated_Source\PSoC4/CyFlash.c **** * configuring the VTOR register.
 378:Generated_Source\PSoC4/CyFlash.c **** *
 379:Generated_Source\PSoC4/CyFlash.c **** * \note The non-blocking operation does not return success status 
 380:Generated_Source\PSoC4/CyFlash.c **** * CY_SYS_FLASH_SUCCESS until the last Resume API is complete. 
 381:Generated_Source\PSoC4/CyFlash.c **** * The CPUSS_SYSARG register will be reflecting the SRAM address during an 
 382:Generated_Source\PSoC4/CyFlash.c **** * ongoing non-blocking operation.
 383:Generated_Source\PSoC4/CyFlash.c **** *
 384:Generated_Source\PSoC4/CyFlash.c **** * \return \ref group_flash_status_codes
 385:Generated_Source\PSoC4/CyFlash.c **** *
 386:Generated_Source\PSoC4/CyFlash.c **** *******************************************************************************/
 387:Generated_Source\PSoC4/CyFlash.c **** uint32 CySysFlashResumeWriteRow(void)
 388:Generated_Source\PSoC4/CyFlash.c **** {
 389:Generated_Source\PSoC4/CyFlash.c ****     volatile uint32 retValue = CY_SYS_FLASH_SUCCESS;
 390:Generated_Source\PSoC4/CyFlash.c ****     static volatile uint32 parameters[1u];
 391:Generated_Source\PSoC4/CyFlash.c **** 
 392:Generated_Source\PSoC4/CyFlash.c ****     /* Resume */
 393:Generated_Source\PSoC4/CyFlash.c ****     parameters[0u] = (uint32) (((uint32) CY_FLASH_KEY_TWO(CY_FLASH_API_OPCODE_RESUME_NON_BLOCKING) 
 394:Generated_Source\PSoC4/CyFlash.c ****                                          CY_FLASH_PARAM_KEY_TWO_OFFSET) | CY_FLASH_KEY_ONE);
 395:Generated_Source\PSoC4/CyFlash.c ****     CY_FLASH_CPUSS_SYSARG_REG = (uint32) &parameters[0u];
 396:Generated_Source\PSoC4/CyFlash.c ****     CY_FLASH_CPUSS_SYSREQ_REG = CY_FLASH_CPUSS_REQ_START | CY_FLASH_API_OPCODE_RESUME_NON_BLOCKING;
ARM GAS  C:\Users\Toshiba\AppData\Local\Temp\ccSNWM24.s 			page 14


 397:Generated_Source\PSoC4/CyFlash.c ****     
 398:Generated_Source\PSoC4/CyFlash.c ****     CY_NOP;
 399:Generated_Source\PSoC4/CyFlash.c ****     retValue = CY_FLASH_API_RETURN;
 400:Generated_Source\PSoC4/CyFlash.c ****     
 401:Generated_Source\PSoC4/CyFlash.c ****     return (retValue);
 402:Generated_Source\PSoC4/CyFlash.c **** }
 403:Generated_Source\PSoC4/CyFlash.c **** 
 404:Generated_Source\PSoC4/CyFlash.c **** #endif /* (CY_IP_FLASH_PARALLEL_PGM_EN && (CY_IP_FLASH_MACROS > 1u)) */
 405:Generated_Source\PSoC4/CyFlash.c **** 
 406:Generated_Source\PSoC4/CyFlash.c **** 
 407:Generated_Source\PSoC4/CyFlash.c **** /*******************************************************************************
 408:Generated_Source\PSoC4/CyFlash.c **** * Function Name: CySysFlashSetWaitCycles
 409:Generated_Source\PSoC4/CyFlash.c **** ****************************************************************************//**
 410:Generated_Source\PSoC4/CyFlash.c **** *
 411:Generated_Source\PSoC4/CyFlash.c **** * Sets the number of clock cycles the cache will wait before it samples data
 412:Generated_Source\PSoC4/CyFlash.c **** * coming back from Flash. This function must be called before increasing the
 413:Generated_Source\PSoC4/CyFlash.c **** * SYSCLK clock frequency. It can optionally be called after lowering SYSCLK
 414:Generated_Source\PSoC4/CyFlash.c **** * clock frequency in order to improve the CPU performance.
 415:Generated_Source\PSoC4/CyFlash.c **** *
 416:Generated_Source\PSoC4/CyFlash.c **** * \param freq The System clock frequency in MHz.
 417:Generated_Source\PSoC4/CyFlash.c **** *
 418:Generated_Source\PSoC4/CyFlash.c **** * \note Invalid frequency will be ignored in Release mode and the CPU will be
 419:Generated_Source\PSoC4/CyFlash.c **** * halted if project is compiled in Debug mode.
 420:Generated_Source\PSoC4/CyFlash.c **** *
 421:Generated_Source\PSoC4/CyFlash.c **** *******************************************************************************/
 422:Generated_Source\PSoC4/CyFlash.c **** void CySysFlashSetWaitCycles(uint32 freq)
 423:Generated_Source\PSoC4/CyFlash.c **** {
 340              		.loc 1 423 0
 341              		.cfi_startproc
 342              		@ args = 0, pretend = 0, frame = 16
 343              		@ frame_needed = 1, uses_anonymous_args = 0
 344 0000 90B5     		push	{r4, r7, lr}
 345              		.cfi_def_cfa_offset 12
 346              		.cfi_offset 4, -12
 347              		.cfi_offset 7, -8
 348              		.cfi_offset 14, -4
 349 0002 85B0     		sub	sp, sp, #20
 350              		.cfi_def_cfa_offset 32
 351 0004 00AF     		add	r7, sp, #0
 352              		.cfi_def_cfa_register 7
 353 0006 7860     		str	r0, [r7, #4]
 424:Generated_Source\PSoC4/CyFlash.c ****     uint8  interruptState;
 425:Generated_Source\PSoC4/CyFlash.c **** 
 426:Generated_Source\PSoC4/CyFlash.c ****     interruptState = CyEnterCriticalSection();
 354              		.loc 1 426 0
 355 0008 0F23     		movs	r3, #15
 356 000a FC18     		adds	r4, r7, r3
 357 000c FFF7FEFF 		bl	CyEnterCriticalSection
 358 0010 0300     		movs	r3, r0
 359 0012 2370     		strb	r3, [r4]
 427:Generated_Source\PSoC4/CyFlash.c **** 
 428:Generated_Source\PSoC4/CyFlash.c ****     #if (CY_IP_CPUSS)
 429:Generated_Source\PSoC4/CyFlash.c **** 
 430:Generated_Source\PSoC4/CyFlash.c ****         if ( freq <= CY_FLASH_SYSCLK_BOUNDARY_MHZ )
 431:Generated_Source\PSoC4/CyFlash.c ****         {
 432:Generated_Source\PSoC4/CyFlash.c ****             CY_SYS_CLK_SELECT_REG &= (uint32)(~CY_FLASH_WAIT_STATE_EN);
 433:Generated_Source\PSoC4/CyFlash.c ****         }
ARM GAS  C:\Users\Toshiba\AppData\Local\Temp\ccSNWM24.s 			page 15


 434:Generated_Source\PSoC4/CyFlash.c ****         else
 435:Generated_Source\PSoC4/CyFlash.c ****         {
 436:Generated_Source\PSoC4/CyFlash.c ****             CY_SYS_CLK_SELECT_REG |= CY_FLASH_WAIT_STATE_EN;
 437:Generated_Source\PSoC4/CyFlash.c ****         }
 438:Generated_Source\PSoC4/CyFlash.c ****     #else
 439:Generated_Source\PSoC4/CyFlash.c ****         #if (CY_IP_CPUSS_FLASHC_PRESENT)
 440:Generated_Source\PSoC4/CyFlash.c ****             /* CY_IP_FM and CY_IP_FS */
 441:Generated_Source\PSoC4/CyFlash.c ****             if (freq <= CY_FLASH_CTL_WS_0_FREQ_MAX)
 360              		.loc 1 441 0
 361 0014 7B68     		ldr	r3, [r7, #4]
 362 0016 102B     		cmp	r3, #16
 363 0018 06D8     		bhi	.L22
 442:Generated_Source\PSoC4/CyFlash.c ****             {
 443:Generated_Source\PSoC4/CyFlash.c ****                 CY_FLASH_CTL_REG = (CY_FLASH_CTL_REG & ~CY_FLASH_CTL_WS_MASK) | CY_FLASH_CTL_WS_0_V
 364              		.loc 1 443 0
 365 001a 164B     		ldr	r3, .L26
 366 001c 154A     		ldr	r2, .L26
 367 001e 1268     		ldr	r2, [r2]
 368 0020 0321     		movs	r1, #3
 369 0022 8A43     		bics	r2, r1
 370 0024 1A60     		str	r2, [r3]
 371 0026 1AE0     		b	.L23
 372              	.L22:
 444:Generated_Source\PSoC4/CyFlash.c ****             } else
 445:Generated_Source\PSoC4/CyFlash.c ****             if (freq <= CY_FLASH_CTL_WS_1_FREQ_MAX)
 373              		.loc 1 445 0
 374 0028 7B68     		ldr	r3, [r7, #4]
 375 002a 202B     		cmp	r3, #32
 376 002c 08D8     		bhi	.L24
 446:Generated_Source\PSoC4/CyFlash.c ****             {
 447:Generated_Source\PSoC4/CyFlash.c ****                 CY_FLASH_CTL_REG = (CY_FLASH_CTL_REG & ~CY_FLASH_CTL_WS_MASK) | CY_FLASH_CTL_WS_1_V
 377              		.loc 1 447 0
 378 002e 114B     		ldr	r3, .L26
 379 0030 104A     		ldr	r2, .L26
 380 0032 1268     		ldr	r2, [r2]
 381 0034 0321     		movs	r1, #3
 382 0036 8A43     		bics	r2, r1
 383 0038 0121     		movs	r1, #1
 384 003a 0A43     		orrs	r2, r1
 385 003c 1A60     		str	r2, [r3]
 386 003e 0EE0     		b	.L23
 387              	.L24:
 448:Generated_Source\PSoC4/CyFlash.c ****             } else
 449:Generated_Source\PSoC4/CyFlash.c ****             #if (CY_IP_FMLT || CY_IP_FSLT)
 450:Generated_Source\PSoC4/CyFlash.c ****                 if (freq <= CY_FLASH_CTL_WS_2_FREQ_MAX)
 388              		.loc 1 450 0
 389 0040 7B68     		ldr	r3, [r7, #4]
 390 0042 302B     		cmp	r3, #48
 391 0044 08D8     		bhi	.L25
 451:Generated_Source\PSoC4/CyFlash.c ****                 {
 452:Generated_Source\PSoC4/CyFlash.c ****                     CY_FLASH_CTL_REG = (CY_FLASH_CTL_REG & ~CY_FLASH_CTL_WS_MASK) | CY_FLASH_CTL_WS
 392              		.loc 1 452 0
 393 0046 0B4B     		ldr	r3, .L26
 394 0048 0A4A     		ldr	r2, .L26
 395 004a 1268     		ldr	r2, [r2]
 396 004c 0321     		movs	r1, #3
 397 004e 8A43     		bics	r2, r1
ARM GAS  C:\Users\Toshiba\AppData\Local\Temp\ccSNWM24.s 			page 16


 398 0050 0221     		movs	r1, #2
 399 0052 0A43     		orrs	r2, r1
 400 0054 1A60     		str	r2, [r3]
 401 0056 02E0     		b	.L23
 402              	.L25:
 453:Generated_Source\PSoC4/CyFlash.c ****                 }
 454:Generated_Source\PSoC4/CyFlash.c ****                 else
 455:Generated_Source\PSoC4/CyFlash.c ****             #endif  /* (CY_IP_FMLT || CY_IP_FSLT) */
 456:Generated_Source\PSoC4/CyFlash.c ****         #endif /* (CY_IP_CPUSS_FLASHC_PRESENT) */
 457:Generated_Source\PSoC4/CyFlash.c ****         {
 458:Generated_Source\PSoC4/CyFlash.c ****             /* Halt CPU in debug mode if frequency is invalid */
 459:Generated_Source\PSoC4/CyFlash.c ****             CYASSERT(0u != 0u);
 403              		.loc 1 459 0 discriminator 1
 404 0058 0020     		movs	r0, #0
 405 005a FFF7FEFF 		bl	CyHalt
 406              	.L23:
 460:Generated_Source\PSoC4/CyFlash.c ****         }
 461:Generated_Source\PSoC4/CyFlash.c **** 
 462:Generated_Source\PSoC4/CyFlash.c ****     #endif  /* (CY_IP_CPUSS) */
 463:Generated_Source\PSoC4/CyFlash.c **** 
 464:Generated_Source\PSoC4/CyFlash.c ****     CyExitCriticalSection(interruptState);
 407              		.loc 1 464 0
 408 005e 0F23     		movs	r3, #15
 409 0060 FB18     		adds	r3, r7, r3
 410 0062 1B78     		ldrb	r3, [r3]
 411 0064 1800     		movs	r0, r3
 412 0066 FFF7FEFF 		bl	CyExitCriticalSection
 465:Generated_Source\PSoC4/CyFlash.c **** }
 413              		.loc 1 465 0
 414 006a C046     		nop
 415 006c BD46     		mov	sp, r7
 416 006e 05B0     		add	sp, sp, #20
 417              		@ sp needed
 418 0070 90BD     		pop	{r4, r7, pc}
 419              	.L27:
 420 0072 C046     		.align	2
 421              	.L26:
 422 0074 30001040 		.word	1074790448
 423              		.cfi_endproc
 424              	.LFE3:
 425              		.size	CySysFlashSetWaitCycles, .-CySysFlashSetWaitCycles
 426              		.section	.text.CySysSFlashWriteUserRow,"ax",%progbits
 427              		.align	2
 428              		.global	CySysSFlashWriteUserRow
 429              		.code	16
 430              		.thumb_func
 431              		.type	CySysSFlashWriteUserRow, %function
 432              	CySysSFlashWriteUserRow:
 433              	.LFB4:
 466:Generated_Source\PSoC4/CyFlash.c **** 
 467:Generated_Source\PSoC4/CyFlash.c **** 
 468:Generated_Source\PSoC4/CyFlash.c **** #if (CY_SFLASH_XTRA_ROWS)
 469:Generated_Source\PSoC4/CyFlash.c **** /*******************************************************************************
 470:Generated_Source\PSoC4/CyFlash.c **** * Function Name: CySysSFlashWriteUserRow
 471:Generated_Source\PSoC4/CyFlash.c **** ****************************************************************************//**
 472:Generated_Source\PSoC4/CyFlash.c **** *
 473:Generated_Source\PSoC4/CyFlash.c **** * Writes data to a row of SFlash user configurable area.
ARM GAS  C:\Users\Toshiba\AppData\Local\Temp\ccSNWM24.s 			page 17


 474:Generated_Source\PSoC4/CyFlash.c **** *
 475:Generated_Source\PSoC4/CyFlash.c **** * This API is applicable for PSoC 4100 BLE, PSoC 4200 BLE, PSoC 4100M,
 476:Generated_Source\PSoC4/CyFlash.c **** * PSoC 4200M, and PSoC 4200L family of devices.
 477:Generated_Source\PSoC4/CyFlash.c **** *
 478:Generated_Source\PSoC4/CyFlash.c **** * \param rowNum The flash row number. The flash row number. The number of the
 479:Generated_Source\PSoC4/CyFlash.c **** * flash rows is defined by the CY_SFLASH_NUMBER_USERROWS macro for the selected
 480:Generated_Source\PSoC4/CyFlash.c **** * device. Valid range is 0-3. Refer to the device TRM for details.
 481:Generated_Source\PSoC4/CyFlash.c **** *
 482:Generated_Source\PSoC4/CyFlash.c **** * \param rowData Array of bytes to write. The size of the array must be equal to
 483:Generated_Source\PSoC4/CyFlash.c **** * the flash row size. The flash row size for the selected device is defined by
 484:Generated_Source\PSoC4/CyFlash.c **** * the \ref CY_SFLASH_SIZEOF_USERROW macro. Refer to the device TRM for the
 485:Generated_Source\PSoC4/CyFlash.c **** * details.
 486:Generated_Source\PSoC4/CyFlash.c **** *
 487:Generated_Source\PSoC4/CyFlash.c **** * \return \ref group_flash_status_codes
 488:Generated_Source\PSoC4/CyFlash.c **** *
 489:Generated_Source\PSoC4/CyFlash.c **** *******************************************************************************/
 490:Generated_Source\PSoC4/CyFlash.c **** uint32 CySysSFlashWriteUserRow(uint32 rowNum, const uint8 rowData[])
 491:Generated_Source\PSoC4/CyFlash.c **** {
 434              		.loc 1 491 0
 435              		.cfi_startproc
 436              		@ args = 0, pretend = 0, frame = 160
 437              		@ frame_needed = 1, uses_anonymous_args = 0
 438 0000 90B5     		push	{r4, r7, lr}
 439              		.cfi_def_cfa_offset 12
 440              		.cfi_offset 4, -12
 441              		.cfi_offset 7, -8
 442              		.cfi_offset 14, -4
 443 0002 A9B0     		sub	sp, sp, #164
 444              		.cfi_def_cfa_offset 176
 445 0004 00AF     		add	r7, sp, #0
 446              		.cfi_def_cfa_register 7
 447 0006 7860     		str	r0, [r7, #4]
 448 0008 3960     		str	r1, [r7]
 492:Generated_Source\PSoC4/CyFlash.c ****     volatile uint32 retValue = CY_SYS_FLASH_SUCCESS;
 449              		.loc 1 492 0
 450 000a 0023     		movs	r3, #0
 451 000c 9822     		movs	r2, #152
 452 000e BA18     		adds	r2, r7, r2
 453 0010 1360     		str	r3, [r2]
 493:Generated_Source\PSoC4/CyFlash.c ****     volatile uint32 clkCnfRetValue = CY_SYS_FLASH_SUCCESS;
 454              		.loc 1 493 0
 455 0012 0023     		movs	r3, #0
 456 0014 9422     		movs	r2, #148
 457 0016 BA18     		adds	r2, r7, r2
 458 0018 1360     		str	r3, [r2]
 494:Generated_Source\PSoC4/CyFlash.c ****     volatile uint32 parameters[(CY_FLASH_SIZEOF_ROW + CY_FLASH_SRAM_ROM_DATA)/4u];
 495:Generated_Source\PSoC4/CyFlash.c ****     uint8  interruptState;
 496:Generated_Source\PSoC4/CyFlash.c **** 
 497:Generated_Source\PSoC4/CyFlash.c **** 
 498:Generated_Source\PSoC4/CyFlash.c ****     if ((rowNum < CY_SFLASH_NUMBER_USERROWS) && (rowData != 0u))
 459              		.loc 1 498 0
 460 001a 7B68     		ldr	r3, [r7, #4]
 461 001c 032B     		cmp	r3, #3
 462 001e 00D9     		bls	.LCB375
 463 0020 A0E0     		b	.L29	@long jump
 464              	.LCB375:
 465              		.loc 1 498 0 is_stmt 0 discriminator 1
ARM GAS  C:\Users\Toshiba\AppData\Local\Temp\ccSNWM24.s 			page 18


 466 0022 3B68     		ldr	r3, [r7]
 467 0024 002B     		cmp	r3, #0
 468 0026 00D1     		bne	.LCB378
 469 0028 9CE0     		b	.L29	@long jump
 470              	.LCB378:
 499:Generated_Source\PSoC4/CyFlash.c ****     {
 500:Generated_Source\PSoC4/CyFlash.c ****         /* Load Flash Bytes */
 501:Generated_Source\PSoC4/CyFlash.c ****         parameters[0u] = (uint32) (CY_FLASH_GET_MACRO_FROM_ROW(rowNum)        << CY_FLASH_PARAM_MAC
 502:Generated_Source\PSoC4/CyFlash.c ****                          (uint32) (CY_FLASH_PAGE_LATCH_START_ADDR             << CY_FLASH_PARAM_ADD
 503:Generated_Source\PSoC4/CyFlash.c ****                          (uint32) (CY_FLASH_KEY_TWO(CY_FLASH_API_OPCODE_LOAD) << CY_FLASH_PARAM_KEY
 471              		.loc 1 503 0 is_stmt 1
 472 002a 7B68     		ldr	r3, [r7, #4]
 473 002c 534A     		ldr	r2, .L46
 474 002e 9342     		cmp	r3, r2
 475 0030 01D9     		bls	.L30
 476              		.loc 1 503 0 is_stmt 0 discriminator 1
 477 0032 534A     		ldr	r2, .L46+4
 478 0034 00E0     		b	.L31
 479              	.L30:
 480              		.loc 1 503 0 discriminator 2
 481 0036 534A     		ldr	r2, .L46+8
 482              	.L31:
 501:Generated_Source\PSoC4/CyFlash.c ****                          (uint32) (CY_FLASH_PAGE_LATCH_START_ADDR             << CY_FLASH_PARAM_ADD
 483              		.loc 1 501 0 is_stmt 1
 484 0038 0C23     		movs	r3, #12
 485 003a FB18     		adds	r3, r7, r3
 486 003c 1A60     		str	r2, [r3]
 504:Generated_Source\PSoC4/CyFlash.c ****                          CY_FLASH_KEY_ONE;
 505:Generated_Source\PSoC4/CyFlash.c ****         parameters[1u] = CY_FLASH_SIZEOF_ROW - 1u;
 487              		.loc 1 505 0
 488 003e 0C23     		movs	r3, #12
 489 0040 FB18     		adds	r3, r7, r3
 490 0042 7F22     		movs	r2, #127
 491 0044 5A60     		str	r2, [r3, #4]
 506:Generated_Source\PSoC4/CyFlash.c **** 
 507:Generated_Source\PSoC4/CyFlash.c ****         (void)memcpy((void *)&parameters[2u], rowData, CY_FLASH_SIZEOF_ROW);
 492              		.loc 1 507 0
 493 0046 3968     		ldr	r1, [r7]
 494 0048 0C23     		movs	r3, #12
 495 004a FB18     		adds	r3, r7, r3
 496 004c 0833     		adds	r3, r3, #8
 497 004e 8022     		movs	r2, #128
 498 0050 1800     		movs	r0, r3
 499 0052 FFF7FEFF 		bl	memcpy
 508:Generated_Source\PSoC4/CyFlash.c ****         CY_FLASH_CPUSS_SYSARG_REG = (uint32) &parameters[0u];
 500              		.loc 1 508 0
 501 0056 4C4B     		ldr	r3, .L46+12
 502 0058 0C22     		movs	r2, #12
 503 005a BA18     		adds	r2, r7, r2
 504 005c 1A60     		str	r2, [r3]
 509:Generated_Source\PSoC4/CyFlash.c ****         CY_FLASH_CPUSS_SYSREQ_REG = CY_FLASH_CPUSS_REQ_START | CY_FLASH_API_OPCODE_LOAD;
 505              		.loc 1 509 0
 506 005e 4B4B     		ldr	r3, .L46+16
 507 0060 4B4A     		ldr	r2, .L46+20
 508 0062 1A60     		str	r2, [r3]
 510:Generated_Source\PSoC4/CyFlash.c ****         CY_NOP;
 509              		.loc 1 510 0
ARM GAS  C:\Users\Toshiba\AppData\Local\Temp\ccSNWM24.s 			page 19


 510              		.syntax divided
 511              	@ 510 "Generated_Source\PSoC4\CyFlash.c" 1
 512 0064 C046     		NOP
 513              	
 514              	@ 0 "" 2
 511:Generated_Source\PSoC4/CyFlash.c ****         retValue = CY_FLASH_API_RETURN;
 515              		.loc 1 511 0
 516              		.thumb
 517              		.syntax unified
 518 0066 484B     		ldr	r3, .L46+12
 519 0068 1B68     		ldr	r3, [r3]
 520 006a 1B0F     		lsrs	r3, r3, #28
 521 006c 1A07     		lsls	r2, r3, #28
 522 006e F023     		movs	r3, #240
 523 0070 1B06     		lsls	r3, r3, #24
 524 0072 9A42     		cmp	r2, r3
 525 0074 04D1     		bne	.L32
 526              		.loc 1 511 0 is_stmt 0 discriminator 1
 527 0076 444B     		ldr	r3, .L46+12
 528 0078 1B68     		ldr	r3, [r3]
 529 007a FF22     		movs	r2, #255
 530 007c 1340     		ands	r3, r2
 531 007e 0DE0     		b	.L33
 532              	.L32:
 533              		.loc 1 511 0 discriminator 2
 534 0080 414B     		ldr	r3, .L46+12
 535 0082 1B68     		ldr	r3, [r3]
 536 0084 1B0F     		lsrs	r3, r3, #28
 537 0086 1A07     		lsls	r2, r3, #28
 538 0088 A023     		movs	r3, #160
 539 008a 1B06     		lsls	r3, r3, #24
 540 008c 9A42     		cmp	r2, r3
 541 008e 04D0     		beq	.L34
 542              		.loc 1 511 0 discriminator 4
 543 0090 3D4B     		ldr	r3, .L46+12
 544 0092 1B68     		ldr	r3, [r3]
 545 0094 FF22     		movs	r2, #255
 546 0096 1340     		ands	r3, r2
 547 0098 00E0     		b	.L33
 548              	.L34:
 549              		.loc 1 511 0 discriminator 5
 550 009a 0023     		movs	r3, #0
 551              	.L33:
 552              		.loc 1 511 0 discriminator 8
 553 009c 9822     		movs	r2, #152
 554 009e BA18     		adds	r2, r7, r2
 555 00a0 1360     		str	r3, [r2]
 512:Generated_Source\PSoC4/CyFlash.c **** 
 513:Generated_Source\PSoC4/CyFlash.c ****         if(retValue == CY_SYS_FLASH_SUCCESS)
 556              		.loc 1 513 0 is_stmt 1 discriminator 8
 557 00a2 9823     		movs	r3, #152
 558 00a4 FB18     		adds	r3, r7, r3
 559 00a6 1B68     		ldr	r3, [r3]
 560 00a8 002B     		cmp	r3, #0
 561 00aa 5FD1     		bne	.L44
 514:Generated_Source\PSoC4/CyFlash.c ****         {
 515:Generated_Source\PSoC4/CyFlash.c ****             /***************************************************************
ARM GAS  C:\Users\Toshiba\AppData\Local\Temp\ccSNWM24.s 			page 20


 516:Generated_Source\PSoC4/CyFlash.c ****             * Mask all the exceptions to guarantee that Flash write will
 517:Generated_Source\PSoC4/CyFlash.c ****             * occur in the atomic way. It will not affect system call
 518:Generated_Source\PSoC4/CyFlash.c ****             * execution (flash row write) since it is executed in the NMI
 519:Generated_Source\PSoC4/CyFlash.c ****             * context.
 520:Generated_Source\PSoC4/CyFlash.c ****             ***************************************************************/
 521:Generated_Source\PSoC4/CyFlash.c ****             interruptState = CyEnterCriticalSection();
 562              		.loc 1 521 0
 563 00ac 9F23     		movs	r3, #159
 564 00ae FC18     		adds	r4, r7, r3
 565 00b0 FFF7FEFF 		bl	CyEnterCriticalSection
 566 00b4 0300     		movs	r3, r0
 567 00b6 2370     		strb	r3, [r4]
 522:Generated_Source\PSoC4/CyFlash.c **** 
 523:Generated_Source\PSoC4/CyFlash.c ****             clkCnfRetValue = CySysFlashClockBackup();
 568              		.loc 1 523 0
 569 00b8 FFF7FEFF 		bl	CySysFlashClockBackup
 570 00bc 0300     		movs	r3, r0
 571 00be 9422     		movs	r2, #148
 572 00c0 BA18     		adds	r2, r7, r2
 573 00c2 1360     		str	r3, [r2]
 524:Generated_Source\PSoC4/CyFlash.c **** 
 525:Generated_Source\PSoC4/CyFlash.c ****         #if(CY_IP_SPCIF_SYNCHRONOUS)
 526:Generated_Source\PSoC4/CyFlash.c ****             if(clkCnfRetValue == CY_SYS_FLASH_SUCCESS)
 574              		.loc 1 526 0
 575 00c4 9423     		movs	r3, #148
 576 00c6 FB18     		adds	r3, r7, r3
 577 00c8 1B68     		ldr	r3, [r3]
 578 00ca 002B     		cmp	r3, #0
 579 00cc 05D1     		bne	.L37
 527:Generated_Source\PSoC4/CyFlash.c ****             {
 528:Generated_Source\PSoC4/CyFlash.c ****                 retValue = CySysFlashClockConfig();
 580              		.loc 1 528 0
 581 00ce FFF7FEFF 		bl	CySysFlashClockConfig
 582 00d2 0300     		movs	r3, r0
 583 00d4 9822     		movs	r2, #152
 584 00d6 BA18     		adds	r2, r7, r2
 585 00d8 1360     		str	r3, [r2]
 586              	.L37:
 529:Generated_Source\PSoC4/CyFlash.c ****             }
 530:Generated_Source\PSoC4/CyFlash.c ****         #endif  /* (CY_IP_SPCIF_SYNCHRONOUS) */
 531:Generated_Source\PSoC4/CyFlash.c **** 
 532:Generated_Source\PSoC4/CyFlash.c ****             if(retValue == CY_SYS_FLASH_SUCCESS)
 587              		.loc 1 532 0
 588 00da 9823     		movs	r3, #152
 589 00dc FB18     		adds	r3, r7, r3
 590 00de 1B68     		ldr	r3, [r3]
 591 00e0 002B     		cmp	r3, #0
 592 00e2 2DD1     		bne	.L38
 533:Generated_Source\PSoC4/CyFlash.c ****             {
 534:Generated_Source\PSoC4/CyFlash.c ****                 /* Write User Sflash Row */
 535:Generated_Source\PSoC4/CyFlash.c ****                 parameters[0u]  = (uint32) (((uint32) CY_FLASH_KEY_TWO(CY_FLASH_API_OPCODE_WRITE_SF
 593              		.loc 1 535 0
 594 00e4 0C23     		movs	r3, #12
 595 00e6 FB18     		adds	r3, r7, r3
 596 00e8 2A4A     		ldr	r2, .L46+24
 597 00ea 1A60     		str	r2, [r3]
 536:Generated_Source\PSoC4/CyFlash.c ****                 parameters[1u] = (uint32) rowNum;
ARM GAS  C:\Users\Toshiba\AppData\Local\Temp\ccSNWM24.s 			page 21


 598              		.loc 1 536 0
 599 00ec 0C23     		movs	r3, #12
 600 00ee FB18     		adds	r3, r7, r3
 601 00f0 7A68     		ldr	r2, [r7, #4]
 602 00f2 5A60     		str	r2, [r3, #4]
 537:Generated_Source\PSoC4/CyFlash.c **** 
 538:Generated_Source\PSoC4/CyFlash.c ****                 CY_FLASH_CPUSS_SYSARG_REG = (uint32) &parameters[0u];
 603              		.loc 1 538 0
 604 00f4 244B     		ldr	r3, .L46+12
 605 00f6 0C22     		movs	r2, #12
 606 00f8 BA18     		adds	r2, r7, r2
 607 00fa 1A60     		str	r2, [r3]
 539:Generated_Source\PSoC4/CyFlash.c ****                 CY_FLASH_CPUSS_SYSREQ_REG = CY_FLASH_CPUSS_REQ_START | CY_FLASH_API_OPCODE_WRITE_SF
 608              		.loc 1 539 0
 609 00fc 234B     		ldr	r3, .L46+16
 610 00fe 264A     		ldr	r2, .L46+28
 611 0100 1A60     		str	r2, [r3]
 540:Generated_Source\PSoC4/CyFlash.c ****                 CY_NOP;
 612              		.loc 1 540 0
 613              		.syntax divided
 614              	@ 540 "Generated_Source\PSoC4\CyFlash.c" 1
 615 0102 C046     		NOP
 616              	
 617              	@ 0 "" 2
 541:Generated_Source\PSoC4/CyFlash.c ****                 retValue = CY_FLASH_API_RETURN;
 618              		.loc 1 541 0
 619              		.thumb
 620              		.syntax unified
 621 0104 204B     		ldr	r3, .L46+12
 622 0106 1B68     		ldr	r3, [r3]
 623 0108 1B0F     		lsrs	r3, r3, #28
 624 010a 1A07     		lsls	r2, r3, #28
 625 010c F023     		movs	r3, #240
 626 010e 1B06     		lsls	r3, r3, #24
 627 0110 9A42     		cmp	r2, r3
 628 0112 04D1     		bne	.L39
 629              		.loc 1 541 0 is_stmt 0 discriminator 1
 630 0114 1C4B     		ldr	r3, .L46+12
 631 0116 1B68     		ldr	r3, [r3]
 632 0118 FF22     		movs	r2, #255
 633 011a 1340     		ands	r3, r2
 634 011c 0DE0     		b	.L40
 635              	.L39:
 636              		.loc 1 541 0 discriminator 2
 637 011e 1A4B     		ldr	r3, .L46+12
 638 0120 1B68     		ldr	r3, [r3]
 639 0122 1B0F     		lsrs	r3, r3, #28
 640 0124 1A07     		lsls	r2, r3, #28
 641 0126 A023     		movs	r3, #160
 642 0128 1B06     		lsls	r3, r3, #24
 643 012a 9A42     		cmp	r2, r3
 644 012c 04D0     		beq	.L41
 645              		.loc 1 541 0 discriminator 4
 646 012e 164B     		ldr	r3, .L46+12
 647 0130 1B68     		ldr	r3, [r3]
 648 0132 FF22     		movs	r2, #255
 649 0134 1340     		ands	r3, r2
ARM GAS  C:\Users\Toshiba\AppData\Local\Temp\ccSNWM24.s 			page 22


 650 0136 00E0     		b	.L40
 651              	.L41:
 652              		.loc 1 541 0 discriminator 5
 653 0138 0023     		movs	r3, #0
 654              	.L40:
 655              		.loc 1 541 0 discriminator 8
 656 013a 9822     		movs	r2, #152
 657 013c BA18     		adds	r2, r7, r2
 658 013e 1360     		str	r3, [r2]
 659              	.L38:
 542:Generated_Source\PSoC4/CyFlash.c ****             }
 543:Generated_Source\PSoC4/CyFlash.c **** 
 544:Generated_Source\PSoC4/CyFlash.c ****             if(clkCnfRetValue == CY_SYS_FLASH_SUCCESS)
 660              		.loc 1 544 0 is_stmt 1
 661 0140 9423     		movs	r3, #148
 662 0142 FB18     		adds	r3, r7, r3
 663 0144 1B68     		ldr	r3, [r3]
 664 0146 002B     		cmp	r3, #0
 665 0148 05D1     		bne	.L43
 545:Generated_Source\PSoC4/CyFlash.c ****             {
 546:Generated_Source\PSoC4/CyFlash.c ****                 clkCnfRetValue = CySysFlashClockRestore();
 666              		.loc 1 546 0
 667 014a FFF7FEFF 		bl	CySysFlashClockRestore
 668 014e 0300     		movs	r3, r0
 669 0150 9422     		movs	r2, #148
 670 0152 BA18     		adds	r2, r7, r2
 671 0154 1360     		str	r3, [r2]
 672              	.L43:
 547:Generated_Source\PSoC4/CyFlash.c ****             }
 548:Generated_Source\PSoC4/CyFlash.c ****             CyExitCriticalSection(interruptState);
 673              		.loc 1 548 0
 674 0156 9F23     		movs	r3, #159
 675 0158 FB18     		adds	r3, r7, r3
 676 015a 1B78     		ldrb	r3, [r3]
 677 015c 1800     		movs	r0, r3
 678 015e FFF7FEFF 		bl	CyExitCriticalSection
 513:Generated_Source\PSoC4/CyFlash.c ****         {
 679              		.loc 1 513 0
 680 0162 03E0     		b	.L44
 681              	.L29:
 549:Generated_Source\PSoC4/CyFlash.c ****         }
 550:Generated_Source\PSoC4/CyFlash.c ****     }
 551:Generated_Source\PSoC4/CyFlash.c ****     else
 552:Generated_Source\PSoC4/CyFlash.c ****     {
 553:Generated_Source\PSoC4/CyFlash.c ****         retValue = CY_SYS_FLASH_INVALID_ADDR;
 682              		.loc 1 553 0
 683 0164 0423     		movs	r3, #4
 684 0166 9822     		movs	r2, #152
 685 0168 BA18     		adds	r2, r7, r2
 686 016a 1360     		str	r3, [r2]
 687              	.L44:
 554:Generated_Source\PSoC4/CyFlash.c ****     }
 555:Generated_Source\PSoC4/CyFlash.c **** 
 556:Generated_Source\PSoC4/CyFlash.c ****     return (retValue);
 688              		.loc 1 556 0
 689 016c 9823     		movs	r3, #152
 690 016e FB18     		adds	r3, r7, r3
ARM GAS  C:\Users\Toshiba\AppData\Local\Temp\ccSNWM24.s 			page 23


 691 0170 1B68     		ldr	r3, [r3]
 557:Generated_Source\PSoC4/CyFlash.c **** }
 692              		.loc 1 557 0
 693 0172 1800     		movs	r0, r3
 694 0174 BD46     		mov	sp, r7
 695 0176 29B0     		add	sp, sp, #164
 696              		@ sp needed
 697 0178 90BD     		pop	{r4, r7, pc}
 698              	.L47:
 699 017a C046     		.align	2
 700              	.L46:
 701 017c FF010000 		.word	511
 702 0180 B6D70001 		.word	16832438
 703 0184 B6D70000 		.word	55222
 704 0188 08001040 		.word	1074790408
 705 018c 04001040 		.word	1074790404
 706 0190 04000080 		.word	-2147483644
 707 0194 B6EB0000 		.word	60342
 708 0198 18000080 		.word	-2147483624
 709              		.cfi_endproc
 710              	.LFE4:
 711              		.size	CySysSFlashWriteUserRow, .-CySysSFlashWriteUserRow
 712              		.section	.text.CySysFlashClockBackup,"ax",%progbits
 713              		.align	2
 714              		.code	16
 715              		.thumb_func
 716              		.type	CySysFlashClockBackup, %function
 717              	CySysFlashClockBackup:
 718              	.LFB5:
 558:Generated_Source\PSoC4/CyFlash.c **** #endif /* (CY_SFLASH_XTRA_ROWS) */
 559:Generated_Source\PSoC4/CyFlash.c **** 
 560:Generated_Source\PSoC4/CyFlash.c **** 
 561:Generated_Source\PSoC4/CyFlash.c **** /*******************************************************************************
 562:Generated_Source\PSoC4/CyFlash.c **** * Function Name: CySysFlashClockBackup
 563:Generated_Source\PSoC4/CyFlash.c **** ****************************************************************************//**
 564:Generated_Source\PSoC4/CyFlash.c **** *
 565:Generated_Source\PSoC4/CyFlash.c **** * Backups the device clock configuration.
 566:Generated_Source\PSoC4/CyFlash.c **** *
 567:Generated_Source\PSoC4/CyFlash.c **** * \return The same as \ref CySysFlashWriteRow().
 568:Generated_Source\PSoC4/CyFlash.c **** *
 569:Generated_Source\PSoC4/CyFlash.c **** *******************************************************************************/
 570:Generated_Source\PSoC4/CyFlash.c **** static cystatus CySysFlashClockBackup(void)
 571:Generated_Source\PSoC4/CyFlash.c **** {
 719              		.loc 1 571 0
 720              		.cfi_startproc
 721              		@ args = 0, pretend = 0, frame = 16
 722              		@ frame_needed = 1, uses_anonymous_args = 0
 723 0000 80B5     		push	{r7, lr}
 724              		.cfi_def_cfa_offset 8
 725              		.cfi_offset 7, -8
 726              		.cfi_offset 14, -4
 727 0002 84B0     		sub	sp, sp, #16
 728              		.cfi_def_cfa_offset 24
 729 0004 00AF     		add	r7, sp, #0
 730              		.cfi_def_cfa_register 7
 572:Generated_Source\PSoC4/CyFlash.c ****     cystatus retValue = CY_SYS_FLASH_SUCCESS;
 731              		.loc 1 572 0
ARM GAS  C:\Users\Toshiba\AppData\Local\Temp\ccSNWM24.s 			page 24


 732 0006 0023     		movs	r3, #0
 733 0008 FB60     		str	r3, [r7, #12]
 573:Generated_Source\PSoC4/CyFlash.c **** #if(!CY_IP_FM)
 574:Generated_Source\PSoC4/CyFlash.c ****     #if !(CY_PSOC4_4000)
 575:Generated_Source\PSoC4/CyFlash.c ****         #if (CY_IP_SPCIF_SYNCHRONOUS)
 576:Generated_Source\PSoC4/CyFlash.c ****             volatile uint32   parameters[2u];
 577:Generated_Source\PSoC4/CyFlash.c ****         #endif /* (CY_IP_SPCIF_SYNCHRONOUS) */
 578:Generated_Source\PSoC4/CyFlash.c ****     #endif  /* !(CY_PSOC4_4000) */
 579:Generated_Source\PSoC4/CyFlash.c **** #endif  /* (!CY_IP_FM) */
 580:Generated_Source\PSoC4/CyFlash.c **** 
 581:Generated_Source\PSoC4/CyFlash.c **** #if(CY_IP_FM)
 582:Generated_Source\PSoC4/CyFlash.c **** 
 583:Generated_Source\PSoC4/CyFlash.c ****     /***************************************************************
 584:Generated_Source\PSoC4/CyFlash.c ****     * Preserve IMO configuration that could be changed during
 585:Generated_Source\PSoC4/CyFlash.c ****     * system call execution (Cypress ID #150448).
 586:Generated_Source\PSoC4/CyFlash.c ****     ***************************************************************/
 587:Generated_Source\PSoC4/CyFlash.c ****     cySysFlashBackup.imoConfigReg = CY_SYS_CLK_IMO_CONFIG_REG;
 588:Generated_Source\PSoC4/CyFlash.c **** 
 589:Generated_Source\PSoC4/CyFlash.c **** #else   /* (CY_IP_FMLT) */
 590:Generated_Source\PSoC4/CyFlash.c **** 
 591:Generated_Source\PSoC4/CyFlash.c ****     #if (CY_PSOC4_4000)
 592:Generated_Source\PSoC4/CyFlash.c **** 
 593:Generated_Source\PSoC4/CyFlash.c ****         /***************************************************************************
 594:Generated_Source\PSoC4/CyFlash.c ****         * Perform firmware clock settings backup for the PSOC4 4000 devices (the
 595:Generated_Source\PSoC4/CyFlash.c ****         * corresponding system call is not available).
 596:Generated_Source\PSoC4/CyFlash.c ****         ***************************************************************************/
 597:Generated_Source\PSoC4/CyFlash.c **** 
 598:Generated_Source\PSoC4/CyFlash.c ****         /***************************************************************************
 599:Generated_Source\PSoC4/CyFlash.c ****         * The registers listed below are modified by CySysFlashClockConfig().
 600:Generated_Source\PSoC4/CyFlash.c ****         *
 601:Generated_Source\PSoC4/CyFlash.c ****         * The registers to be saved:
 602:Generated_Source\PSoC4/CyFlash.c ****         * - CY_SYS_CLK_IMO_CONFIG_REG - IMO enable state.
 603:Generated_Source\PSoC4/CyFlash.c ****         * - CY_SYS_CLK_SELECT_REG     - HFCLK source, divider, pump source. Save
 604:Generated_Source\PSoC4/CyFlash.c ****         *                               entire register as it can be directly
 605:Generated_Source\PSoC4/CyFlash.c ****         *                               written on restore (no special
 606:Generated_Source\PSoC4/CyFlash.c ****         *                               requirements).
 607:Generated_Source\PSoC4/CyFlash.c ****         * - CY_SYS_CLK_IMO_SELECT_REG - Save IMO frequency.
 608:Generated_Source\PSoC4/CyFlash.c ****         *
 609:Generated_Source\PSoC4/CyFlash.c ****         * The registers not to be saved:
 610:Generated_Source\PSoC4/CyFlash.c ****         * - CY_SYS_CLK_IMO_TRIM1_REG  - No need to save. Function of frequency.
 611:Generated_Source\PSoC4/CyFlash.c ****         *                               Restored by CySysClkWriteImoFreq().
 612:Generated_Source\PSoC4/CyFlash.c ****         * - CY_SYS_CLK_IMO_TRIM3_REG  - No need to save. Function of frequency.
 613:Generated_Source\PSoC4/CyFlash.c ****         *                               Restored by CySysClkWriteImoFreq().
 614:Generated_Source\PSoC4/CyFlash.c ****         * - REG_CPUSS_FLASH_CTL       - Flash wait cycles. Unmodified due to system
 615:Generated_Source\PSoC4/CyFlash.c ****         *                               clock 16 MHz limit.
 616:Generated_Source\PSoC4/CyFlash.c ****         ***************************************************************************/
 617:Generated_Source\PSoC4/CyFlash.c **** 
 618:Generated_Source\PSoC4/CyFlash.c ****         cySysFlashBackup.clkSelectReg = CY_SYS_CLK_SELECT_REG;
 619:Generated_Source\PSoC4/CyFlash.c ****         cySysFlashBackup.clkImoEna    = CY_SYS_CLK_IMO_CONFIG_REG & CY_SYS_CLK_IMO_CONFIG_ENABLE;
 620:Generated_Source\PSoC4/CyFlash.c ****         cySysFlashBackup.clkImoFreq   = CY_SYS_CLK_IMO_MIN_FREQ_MHZ + (CY_SYS_CLK_IMO_SELECT_REG <<
 621:Generated_Source\PSoC4/CyFlash.c **** 
 622:Generated_Source\PSoC4/CyFlash.c ****     #else
 623:Generated_Source\PSoC4/CyFlash.c **** 
 624:Generated_Source\PSoC4/CyFlash.c ****         #if (CY_IP_SPCIF_SYNCHRONOUS)
 625:Generated_Source\PSoC4/CyFlash.c ****             /* FM-Lite Clock Backup System Call */
 626:Generated_Source\PSoC4/CyFlash.c ****             parameters[0u] =
 734              		.loc 1 626 0
ARM GAS  C:\Users\Toshiba\AppData\Local\Temp\ccSNWM24.s 			page 25


 735 000a 3B1D     		adds	r3, r7, #4
 736 000c 164A     		ldr	r2, .L54
 737 000e 1A60     		str	r2, [r3]
 627:Generated_Source\PSoC4/CyFlash.c ****                 (uint32) ((CY_FLASH_KEY_TWO(CY_FLASH_API_OPCODE_CLK_BACKUP) <<  CY_FLASH_PARAM_KEY_
 628:Generated_Source\PSoC4/CyFlash.c ****                             CY_FLASH_KEY_ONE);
 629:Generated_Source\PSoC4/CyFlash.c ****             parameters[1u] = (uint32) &cySysFlashBackup.clockSettings[0u];
 738              		.loc 1 629 0
 739 0010 164A     		ldr	r2, .L54+4
 740 0012 3B1D     		adds	r3, r7, #4
 741 0014 5A60     		str	r2, [r3, #4]
 630:Generated_Source\PSoC4/CyFlash.c ****             CY_FLASH_CPUSS_SYSARG_REG = (uint32) &parameters[0u];
 742              		.loc 1 630 0
 743 0016 164B     		ldr	r3, .L54+8
 744 0018 3A1D     		adds	r2, r7, #4
 745 001a 1A60     		str	r2, [r3]
 631:Generated_Source\PSoC4/CyFlash.c ****             CY_FLASH_CPUSS_SYSREQ_REG = CY_FLASH_CPUSS_REQ_START | CY_FLASH_API_OPCODE_CLK_BACKUP;
 746              		.loc 1 631 0
 747 001c 154B     		ldr	r3, .L54+12
 748 001e 164A     		ldr	r2, .L54+16
 749 0020 1A60     		str	r2, [r3]
 632:Generated_Source\PSoC4/CyFlash.c ****             CY_NOP;
 750              		.loc 1 632 0
 751              		.syntax divided
 752              	@ 632 "Generated_Source\PSoC4\CyFlash.c" 1
 753 0022 C046     		NOP
 754              	
 755              	@ 0 "" 2
 633:Generated_Source\PSoC4/CyFlash.c ****             retValue = CY_FLASH_API_RETURN;
 756              		.loc 1 633 0
 757              		.thumb
 758              		.syntax unified
 759 0024 124B     		ldr	r3, .L54+8
 760 0026 1B68     		ldr	r3, [r3]
 761 0028 1B0F     		lsrs	r3, r3, #28
 762 002a 1A07     		lsls	r2, r3, #28
 763 002c F023     		movs	r3, #240
 764 002e 1B06     		lsls	r3, r3, #24
 765 0030 9A42     		cmp	r2, r3
 766 0032 04D1     		bne	.L49
 767              		.loc 1 633 0 is_stmt 0 discriminator 1
 768 0034 0E4B     		ldr	r3, .L54+8
 769 0036 1B68     		ldr	r3, [r3]
 770 0038 FF22     		movs	r2, #255
 771 003a 1340     		ands	r3, r2
 772 003c 0DE0     		b	.L50
 773              	.L49:
 774              		.loc 1 633 0 discriminator 2
 775 003e 0C4B     		ldr	r3, .L54+8
 776 0040 1B68     		ldr	r3, [r3]
 777 0042 1B0F     		lsrs	r3, r3, #28
 778 0044 1A07     		lsls	r2, r3, #28
 779 0046 A023     		movs	r3, #160
 780 0048 1B06     		lsls	r3, r3, #24
 781 004a 9A42     		cmp	r2, r3
 782 004c 04D0     		beq	.L51
 783              		.loc 1 633 0 discriminator 4
 784 004e 084B     		ldr	r3, .L54+8
ARM GAS  C:\Users\Toshiba\AppData\Local\Temp\ccSNWM24.s 			page 26


 785 0050 1B68     		ldr	r3, [r3]
 786 0052 FF22     		movs	r2, #255
 787 0054 1340     		ands	r3, r2
 788 0056 00E0     		b	.L50
 789              	.L51:
 790              		.loc 1 633 0 discriminator 5
 791 0058 0023     		movs	r3, #0
 792              	.L50:
 793              		.loc 1 633 0 discriminator 8
 794 005a FB60     		str	r3, [r7, #12]
 634:Generated_Source\PSoC4/CyFlash.c ****         #endif /* (CY_IP_SPCIF_SYNCHRONOUS) */
 635:Generated_Source\PSoC4/CyFlash.c **** 
 636:Generated_Source\PSoC4/CyFlash.c ****     #endif  /* (CY_PSOC4_4000) */
 637:Generated_Source\PSoC4/CyFlash.c **** 
 638:Generated_Source\PSoC4/CyFlash.c **** #endif  /* (CY_IP_FM) */
 639:Generated_Source\PSoC4/CyFlash.c **** 
 640:Generated_Source\PSoC4/CyFlash.c ****     return (retValue);
 795              		.loc 1 640 0 is_stmt 1 discriminator 8
 796 005c FB68     		ldr	r3, [r7, #12]
 641:Generated_Source\PSoC4/CyFlash.c **** }
 797              		.loc 1 641 0 discriminator 8
 798 005e 1800     		movs	r0, r3
 799 0060 BD46     		mov	sp, r7
 800 0062 04B0     		add	sp, sp, #16
 801              		@ sp needed
 802 0064 80BD     		pop	{r7, pc}
 803              	.L55:
 804 0066 C046     		.align	2
 805              	.L54:
 806 0068 B6E90000 		.word	59830
 807 006c 04000000 		.word	cySysFlashBackup+4
 808 0070 08001040 		.word	1074790408
 809 0074 04001040 		.word	1074790404
 810 0078 16000080 		.word	-2147483626
 811              		.cfi_endproc
 812              	.LFE5:
 813              		.size	CySysFlashClockBackup, .-CySysFlashClockBackup
 814              		.section	.text.CySysFlashClockConfig,"ax",%progbits
 815              		.align	2
 816              		.code	16
 817              		.thumb_func
 818              		.type	CySysFlashClockConfig, %function
 819              	CySysFlashClockConfig:
 820              	.LFB6:
 642:Generated_Source\PSoC4/CyFlash.c **** 
 643:Generated_Source\PSoC4/CyFlash.c **** 
 644:Generated_Source\PSoC4/CyFlash.c **** #if(CY_IP_SPCIF_SYNCHRONOUS)
 645:Generated_Source\PSoC4/CyFlash.c **** /*******************************************************************************
 646:Generated_Source\PSoC4/CyFlash.c **** * Function Name: CySysFlashClockConfig
 647:Generated_Source\PSoC4/CyFlash.c **** ****************************************************************************//**
 648:Generated_Source\PSoC4/CyFlash.c **** *
 649:Generated_Source\PSoC4/CyFlash.c **** * Configures the device clocks for the flash writing.
 650:Generated_Source\PSoC4/CyFlash.c **** *
 651:Generated_Source\PSoC4/CyFlash.c **** * \return The same as \ref CySysFlashWriteRow().
 652:Generated_Source\PSoC4/CyFlash.c **** *
 653:Generated_Source\PSoC4/CyFlash.c **** *******************************************************************************/
 654:Generated_Source\PSoC4/CyFlash.c **** static cystatus CySysFlashClockConfig(void)
ARM GAS  C:\Users\Toshiba\AppData\Local\Temp\ccSNWM24.s 			page 27


 655:Generated_Source\PSoC4/CyFlash.c **** {
 821              		.loc 1 655 0
 822              		.cfi_startproc
 823              		@ args = 0, pretend = 0, frame = 8
 824              		@ frame_needed = 1, uses_anonymous_args = 0
 825 0000 80B5     		push	{r7, lr}
 826              		.cfi_def_cfa_offset 8
 827              		.cfi_offset 7, -8
 828              		.cfi_offset 14, -4
 829 0002 82B0     		sub	sp, sp, #8
 830              		.cfi_def_cfa_offset 16
 831 0004 00AF     		add	r7, sp, #0
 832              		.cfi_def_cfa_register 7
 656:Generated_Source\PSoC4/CyFlash.c ****     cystatus retValue = CY_SYS_FLASH_SUCCESS;
 833              		.loc 1 656 0
 834 0006 0023     		movs	r3, #0
 835 0008 7B60     		str	r3, [r7, #4]
 657:Generated_Source\PSoC4/CyFlash.c **** 
 658:Generated_Source\PSoC4/CyFlash.c ****     /***************************************************************************
 659:Generated_Source\PSoC4/CyFlash.c ****     * The FM-Lite IP uses the IMO at 48MHz for the pump clock and SPC timer
 660:Generated_Source\PSoC4/CyFlash.c ****     * clock. The PUMP_SEL and HF clock must be set to IMO before calling Flash
 661:Generated_Source\PSoC4/CyFlash.c ****     * write or erase operation.
 662:Generated_Source\PSoC4/CyFlash.c ****     ***************************************************************************/
 663:Generated_Source\PSoC4/CyFlash.c **** #if (CY_PSOC4_4000)
 664:Generated_Source\PSoC4/CyFlash.c **** 
 665:Generated_Source\PSoC4/CyFlash.c ****     /***************************************************************************
 666:Generated_Source\PSoC4/CyFlash.c ****     * Perform firmware clock settings setup for the PSOC4 4000 devices (the
 667:Generated_Source\PSoC4/CyFlash.c ****     * corresponding system call is not reliable):
 668:Generated_Source\PSoC4/CyFlash.c ****     * - The IMO frequency should be 48 MHz
 669:Generated_Source\PSoC4/CyFlash.c ****     * - The IMO should be source for the HFCLK
 670:Generated_Source\PSoC4/CyFlash.c ****     * - The IMO should be the source for the charge pump clock
 671:Generated_Source\PSoC4/CyFlash.c ****     *
 672:Generated_Source\PSoC4/CyFlash.c ****     * Note The structure members used below are initialized by
 673:Generated_Source\PSoC4/CyFlash.c ****     * the CySysFlashClockBackup() function.
 674:Generated_Source\PSoC4/CyFlash.c ****     ***************************************************************************/
 675:Generated_Source\PSoC4/CyFlash.c ****     if ((cySysFlashBackup.clkImoFreq != 48u) ||
 676:Generated_Source\PSoC4/CyFlash.c ****         ((cySysFlashBackup.clkSelectReg & CY_SYS_CLK_SELECT_DIRECT_SEL_MASK) != CY_SYS_CLK_HFCLK_IM
 677:Generated_Source\PSoC4/CyFlash.c ****         (((cySysFlashBackup.clkSelectReg >> CY_SYS_CLK_SELECT_PUMP_SEL_SHIFT) & CY_SYS_CLK_SELECT_P
 678:Generated_Source\PSoC4/CyFlash.c ****             CY_SYS_CLK_SELECT_PUMP_SEL_IMO))
 679:Generated_Source\PSoC4/CyFlash.c ****     {
 680:Generated_Source\PSoC4/CyFlash.c ****         /***********************************************************************
 681:Generated_Source\PSoC4/CyFlash.c ****          Set HFCLK divider to divide-by-4 to ensure that System clock frequency
 682:Generated_Source\PSoC4/CyFlash.c ****         * is within the valid limit (16 MHz for the PSoC4 4000).
 683:Generated_Source\PSoC4/CyFlash.c ****         ***********************************************************************/
 684:Generated_Source\PSoC4/CyFlash.c ****         CySysClkWriteHfclkDiv(CY_SYS_CLK_HFCLK_DIV_4);
 685:Generated_Source\PSoC4/CyFlash.c **** 
 686:Generated_Source\PSoC4/CyFlash.c ****         /* The IMO frequency should be 48 MHz */
 687:Generated_Source\PSoC4/CyFlash.c ****         if (cySysFlashBackup.clkImoFreq != 48u)
 688:Generated_Source\PSoC4/CyFlash.c ****         {
 689:Generated_Source\PSoC4/CyFlash.c ****             CySysClkWriteImoFreq(48u);
 690:Generated_Source\PSoC4/CyFlash.c ****         }
 691:Generated_Source\PSoC4/CyFlash.c ****         CySysClkImoStart();
 692:Generated_Source\PSoC4/CyFlash.c **** 
 693:Generated_Source\PSoC4/CyFlash.c ****         /* The IMO should be source for the HFCLK */
 694:Generated_Source\PSoC4/CyFlash.c ****         CySysClkWriteHfclkDirect(CY_SYS_CLK_HFCLK_IMO);
 695:Generated_Source\PSoC4/CyFlash.c **** 
 696:Generated_Source\PSoC4/CyFlash.c ****         /* The IMO should be the source for the charge pump clock */
ARM GAS  C:\Users\Toshiba\AppData\Local\Temp\ccSNWM24.s 			page 28


 697:Generated_Source\PSoC4/CyFlash.c ****         CY_SYS_CLK_SELECT_REG =  (CY_SYS_CLK_SELECT_REG &
 698:Generated_Source\PSoC4/CyFlash.c ****             ((uint32)~(uint32)(CY_SYS_CLK_SELECT_PUMP_SEL_MASK << CY_SYS_CLK_SELECT_PUMP_SEL_SHIFT)
 699:Generated_Source\PSoC4/CyFlash.c ****             ((uint32)((uint32)1u << CY_SYS_CLK_SELECT_PUMP_SEL_SHIFT));
 700:Generated_Source\PSoC4/CyFlash.c ****     }
 701:Generated_Source\PSoC4/CyFlash.c **** 
 702:Generated_Source\PSoC4/CyFlash.c **** #else
 703:Generated_Source\PSoC4/CyFlash.c **** 
 704:Generated_Source\PSoC4/CyFlash.c ****     /* FM-Lite Clock Configuration */
 705:Generated_Source\PSoC4/CyFlash.c ****     CY_FLASH_CPUSS_SYSARG_REG =
 836              		.loc 1 705 0
 837 000a 144B     		ldr	r3, .L62
 838 000c 144A     		ldr	r2, .L62+4
 839 000e 1A60     		str	r2, [r3]
 706:Generated_Source\PSoC4/CyFlash.c ****         (uint32) ((CY_FLASH_KEY_TWO(CY_FLASH_API_OPCODE_CLK_CONFIG) <<  CY_FLASH_PARAM_KEY_TWO_OFFS
 707:Generated_Source\PSoC4/CyFlash.c ****                     CY_FLASH_KEY_ONE);
 708:Generated_Source\PSoC4/CyFlash.c ****     CY_FLASH_CPUSS_SYSREQ_REG = CY_FLASH_CPUSS_REQ_START | CY_FLASH_API_OPCODE_CLK_CONFIG;
 840              		.loc 1 708 0
 841 0010 144B     		ldr	r3, .L62+8
 842 0012 154A     		ldr	r2, .L62+12
 843 0014 1A60     		str	r2, [r3]
 709:Generated_Source\PSoC4/CyFlash.c ****     CY_NOP;
 844              		.loc 1 709 0
 845              		.syntax divided
 846              	@ 709 "Generated_Source\PSoC4\CyFlash.c" 1
 847 0016 C046     		NOP
 848              	
 849              	@ 0 "" 2
 710:Generated_Source\PSoC4/CyFlash.c ****     retValue = CY_FLASH_API_RETURN;
 850              		.loc 1 710 0
 851              		.thumb
 852              		.syntax unified
 853 0018 104B     		ldr	r3, .L62
 854 001a 1B68     		ldr	r3, [r3]
 855 001c 1B0F     		lsrs	r3, r3, #28
 856 001e 1A07     		lsls	r2, r3, #28
 857 0020 F023     		movs	r3, #240
 858 0022 1B06     		lsls	r3, r3, #24
 859 0024 9A42     		cmp	r2, r3
 860 0026 04D1     		bne	.L57
 861              		.loc 1 710 0 is_stmt 0 discriminator 1
 862 0028 0C4B     		ldr	r3, .L62
 863 002a 1B68     		ldr	r3, [r3]
 864 002c FF22     		movs	r2, #255
 865 002e 1340     		ands	r3, r2
 866 0030 0DE0     		b	.L58
 867              	.L57:
 868              		.loc 1 710 0 discriminator 2
 869 0032 0A4B     		ldr	r3, .L62
 870 0034 1B68     		ldr	r3, [r3]
 871 0036 1B0F     		lsrs	r3, r3, #28
 872 0038 1A07     		lsls	r2, r3, #28
 873 003a A023     		movs	r3, #160
 874 003c 1B06     		lsls	r3, r3, #24
 875 003e 9A42     		cmp	r2, r3
 876 0040 04D0     		beq	.L59
 877              		.loc 1 710 0 discriminator 4
 878 0042 064B     		ldr	r3, .L62
ARM GAS  C:\Users\Toshiba\AppData\Local\Temp\ccSNWM24.s 			page 29


 879 0044 1B68     		ldr	r3, [r3]
 880 0046 FF22     		movs	r2, #255
 881 0048 1340     		ands	r3, r2
 882 004a 00E0     		b	.L58
 883              	.L59:
 884              		.loc 1 710 0 discriminator 5
 885 004c 0023     		movs	r3, #0
 886              	.L58:
 887              		.loc 1 710 0 discriminator 8
 888 004e 7B60     		str	r3, [r7, #4]
 711:Generated_Source\PSoC4/CyFlash.c **** 
 712:Generated_Source\PSoC4/CyFlash.c **** #endif  /* (CY_PSOC4_4000) */
 713:Generated_Source\PSoC4/CyFlash.c **** 
 714:Generated_Source\PSoC4/CyFlash.c ****     return (retValue);
 889              		.loc 1 714 0 is_stmt 1 discriminator 8
 890 0050 7B68     		ldr	r3, [r7, #4]
 715:Generated_Source\PSoC4/CyFlash.c **** }
 891              		.loc 1 715 0 discriminator 8
 892 0052 1800     		movs	r0, r3
 893 0054 BD46     		mov	sp, r7
 894 0056 02B0     		add	sp, sp, #8
 895              		@ sp needed
 896 0058 80BD     		pop	{r7, pc}
 897              	.L63:
 898 005a C046     		.align	2
 899              	.L62:
 900 005c 08001040 		.word	1074790408
 901 0060 B6E80000 		.word	59574
 902 0064 04001040 		.word	1074790404
 903 0068 15000080 		.word	-2147483627
 904              		.cfi_endproc
 905              	.LFE6:
 906              		.size	CySysFlashClockConfig, .-CySysFlashClockConfig
 907              		.section	.text.CySysFlashClockRestore,"ax",%progbits
 908              		.align	2
 909              		.code	16
 910              		.thumb_func
 911              		.type	CySysFlashClockRestore, %function
 912              	CySysFlashClockRestore:
 913              	.LFB7:
 716:Generated_Source\PSoC4/CyFlash.c **** #endif  /* (CY_IP_SPCIF_SYNCHRONOUS) */
 717:Generated_Source\PSoC4/CyFlash.c **** 
 718:Generated_Source\PSoC4/CyFlash.c **** 
 719:Generated_Source\PSoC4/CyFlash.c **** /*******************************************************************************
 720:Generated_Source\PSoC4/CyFlash.c **** * Function Name: CySysFlashClockRestore
 721:Generated_Source\PSoC4/CyFlash.c **** ****************************************************************************//**
 722:Generated_Source\PSoC4/CyFlash.c **** *
 723:Generated_Source\PSoC4/CyFlash.c **** * Restores the device clock configuration.
 724:Generated_Source\PSoC4/CyFlash.c **** *
 725:Generated_Source\PSoC4/CyFlash.c **** * \return The same as \ref CySysFlashWriteRow().
 726:Generated_Source\PSoC4/CyFlash.c **** *
 727:Generated_Source\PSoC4/CyFlash.c **** *******************************************************************************/
 728:Generated_Source\PSoC4/CyFlash.c **** static cystatus CySysFlashClockRestore(void)
 729:Generated_Source\PSoC4/CyFlash.c **** {
 914              		.loc 1 729 0
 915              		.cfi_startproc
 916              		@ args = 0, pretend = 0, frame = 16
ARM GAS  C:\Users\Toshiba\AppData\Local\Temp\ccSNWM24.s 			page 30


 917              		@ frame_needed = 1, uses_anonymous_args = 0
 918 0000 80B5     		push	{r7, lr}
 919              		.cfi_def_cfa_offset 8
 920              		.cfi_offset 7, -8
 921              		.cfi_offset 14, -4
 922 0002 84B0     		sub	sp, sp, #16
 923              		.cfi_def_cfa_offset 24
 924 0004 00AF     		add	r7, sp, #0
 925              		.cfi_def_cfa_register 7
 730:Generated_Source\PSoC4/CyFlash.c ****     cystatus retValue = CY_SYS_FLASH_SUCCESS;
 926              		.loc 1 730 0
 927 0006 0023     		movs	r3, #0
 928 0008 FB60     		str	r3, [r7, #12]
 731:Generated_Source\PSoC4/CyFlash.c **** #if(!CY_IP_FM)
 732:Generated_Source\PSoC4/CyFlash.c ****     #if !(CY_PSOC4_4000)
 733:Generated_Source\PSoC4/CyFlash.c ****         #if (CY_IP_SPCIF_SYNCHRONOUS)
 734:Generated_Source\PSoC4/CyFlash.c ****             volatile uint32   parameters[2u];
 735:Generated_Source\PSoC4/CyFlash.c ****         #endif /* (CY_IP_SPCIF_SYNCHRONOUS) */
 736:Generated_Source\PSoC4/CyFlash.c ****     #endif  /* !(CY_PSOC4_4000) */
 737:Generated_Source\PSoC4/CyFlash.c **** #endif  /* (!CY_IP_FM) */
 738:Generated_Source\PSoC4/CyFlash.c **** 
 739:Generated_Source\PSoC4/CyFlash.c **** #if(CY_IP_FM)
 740:Generated_Source\PSoC4/CyFlash.c **** 
 741:Generated_Source\PSoC4/CyFlash.c ****     /***************************************************************
 742:Generated_Source\PSoC4/CyFlash.c ****     * Restore IMO configuration that could be changed during
 743:Generated_Source\PSoC4/CyFlash.c ****     * system call execution (Cypress ID #150448).
 744:Generated_Source\PSoC4/CyFlash.c ****     ***************************************************************/
 745:Generated_Source\PSoC4/CyFlash.c ****     CY_SYS_CLK_IMO_CONFIG_REG = cySysFlashBackup.imoConfigReg;
 746:Generated_Source\PSoC4/CyFlash.c **** 
 747:Generated_Source\PSoC4/CyFlash.c **** #else
 748:Generated_Source\PSoC4/CyFlash.c **** 
 749:Generated_Source\PSoC4/CyFlash.c ****     #if (CY_PSOC4_4000)
 750:Generated_Source\PSoC4/CyFlash.c **** 
 751:Generated_Source\PSoC4/CyFlash.c ****         /***************************************************************************
 752:Generated_Source\PSoC4/CyFlash.c ****         * Perform firmware clock settings restore for the PSOC4 4000 devices (the
 753:Generated_Source\PSoC4/CyFlash.c ****         * corresponding system call is not available).
 754:Generated_Source\PSoC4/CyFlash.c ****         ***************************************************************************/
 755:Generated_Source\PSoC4/CyFlash.c **** 
 756:Generated_Source\PSoC4/CyFlash.c ****         /* Restore clock settings */
 757:Generated_Source\PSoC4/CyFlash.c ****         if ((cySysFlashBackup.clkImoFreq != 48u) ||
 758:Generated_Source\PSoC4/CyFlash.c ****             ((cySysFlashBackup.clkSelectReg & CY_SYS_CLK_SELECT_DIRECT_SEL_MASK) != CY_SYS_CLK_HFCL
 759:Generated_Source\PSoC4/CyFlash.c ****             (((cySysFlashBackup.clkSelectReg >> CY_SYS_CLK_SELECT_PUMP_SEL_SHIFT) & CY_SYS_CLK_SELE
 760:Generated_Source\PSoC4/CyFlash.c ****                 CY_SYS_CLK_SELECT_PUMP_SEL_IMO))
 761:Generated_Source\PSoC4/CyFlash.c ****         {
 762:Generated_Source\PSoC4/CyFlash.c ****             /* Restore IMO frequency if needed */
 763:Generated_Source\PSoC4/CyFlash.c ****             if (cySysFlashBackup.clkImoFreq != 48u)
 764:Generated_Source\PSoC4/CyFlash.c ****             {
 765:Generated_Source\PSoC4/CyFlash.c ****                 CySysClkWriteImoFreq(cySysFlashBackup.clkImoFreq);
 766:Generated_Source\PSoC4/CyFlash.c ****             }
 767:Generated_Source\PSoC4/CyFlash.c **** 
 768:Generated_Source\PSoC4/CyFlash.c ****             /* Restore HFCLK clock source */
 769:Generated_Source\PSoC4/CyFlash.c ****             CySysClkWriteHfclkDirect(cySysFlashBackup.clkSelectReg & CY_SYS_CLK_SELECT_DIRECT_SEL_M
 770:Generated_Source\PSoC4/CyFlash.c **** 
 771:Generated_Source\PSoC4/CyFlash.c ****             /* Restore HFCLK divider and source for pump  */
 772:Generated_Source\PSoC4/CyFlash.c ****             CY_SYS_CLK_SELECT_REG = cySysFlashBackup.clkSelectReg;
 773:Generated_Source\PSoC4/CyFlash.c **** 
 774:Generated_Source\PSoC4/CyFlash.c ****             /* Stop IMO if needed */
ARM GAS  C:\Users\Toshiba\AppData\Local\Temp\ccSNWM24.s 			page 31


 775:Generated_Source\PSoC4/CyFlash.c ****             if (0u == cySysFlashBackup.clkImoEna)
 776:Generated_Source\PSoC4/CyFlash.c ****             {
 777:Generated_Source\PSoC4/CyFlash.c ****                 CySysClkImoStop();
 778:Generated_Source\PSoC4/CyFlash.c ****             }
 779:Generated_Source\PSoC4/CyFlash.c ****         }
 780:Generated_Source\PSoC4/CyFlash.c **** 
 781:Generated_Source\PSoC4/CyFlash.c ****     #else
 782:Generated_Source\PSoC4/CyFlash.c **** 
 783:Generated_Source\PSoC4/CyFlash.c ****         #if (CY_IP_SPCIF_SYNCHRONOUS)
 784:Generated_Source\PSoC4/CyFlash.c ****             /* FM-Lite Clock Restore */
 785:Generated_Source\PSoC4/CyFlash.c ****             parameters[0u] =
 929              		.loc 1 785 0
 930 000a 3B1D     		adds	r3, r7, #4
 931 000c 164A     		ldr	r2, .L70
 932 000e 1A60     		str	r2, [r3]
 786:Generated_Source\PSoC4/CyFlash.c ****                 (uint32) ((CY_FLASH_KEY_TWO(CY_FLASH_API_OPCODE_CLK_RESTORE) <<  CY_FLASH_PARAM_KEY
 787:Generated_Source\PSoC4/CyFlash.c ****                             CY_FLASH_KEY_ONE);
 788:Generated_Source\PSoC4/CyFlash.c ****             parameters[1u] = (uint32) &cySysFlashBackup.clockSettings[0u];
 933              		.loc 1 788 0
 934 0010 164A     		ldr	r2, .L70+4
 935 0012 3B1D     		adds	r3, r7, #4
 936 0014 5A60     		str	r2, [r3, #4]
 789:Generated_Source\PSoC4/CyFlash.c ****             CY_FLASH_CPUSS_SYSARG_REG = (uint32) &parameters[0u];
 937              		.loc 1 789 0
 938 0016 164B     		ldr	r3, .L70+8
 939 0018 3A1D     		adds	r2, r7, #4
 940 001a 1A60     		str	r2, [r3]
 790:Generated_Source\PSoC4/CyFlash.c ****             CY_FLASH_CPUSS_SYSREQ_REG = CY_FLASH_CPUSS_REQ_START | CY_FLASH_API_OPCODE_CLK_RESTORE;
 941              		.loc 1 790 0
 942 001c 154B     		ldr	r3, .L70+12
 943 001e 164A     		ldr	r2, .L70+16
 944 0020 1A60     		str	r2, [r3]
 791:Generated_Source\PSoC4/CyFlash.c ****             CY_NOP;
 945              		.loc 1 791 0
 946              		.syntax divided
 947              	@ 791 "Generated_Source\PSoC4\CyFlash.c" 1
 948 0022 C046     		NOP
 949              	
 950              	@ 0 "" 2
 792:Generated_Source\PSoC4/CyFlash.c ****             retValue = CY_FLASH_API_RETURN;
 951              		.loc 1 792 0
 952              		.thumb
 953              		.syntax unified
 954 0024 124B     		ldr	r3, .L70+8
 955 0026 1B68     		ldr	r3, [r3]
 956 0028 1B0F     		lsrs	r3, r3, #28
 957 002a 1A07     		lsls	r2, r3, #28
 958 002c F023     		movs	r3, #240
 959 002e 1B06     		lsls	r3, r3, #24
 960 0030 9A42     		cmp	r2, r3
 961 0032 04D1     		bne	.L65
 962              		.loc 1 792 0 is_stmt 0 discriminator 1
 963 0034 0E4B     		ldr	r3, .L70+8
 964 0036 1B68     		ldr	r3, [r3]
 965 0038 FF22     		movs	r2, #255
 966 003a 1340     		ands	r3, r2
 967 003c 0DE0     		b	.L66
ARM GAS  C:\Users\Toshiba\AppData\Local\Temp\ccSNWM24.s 			page 32


 968              	.L65:
 969              		.loc 1 792 0 discriminator 2
 970 003e 0C4B     		ldr	r3, .L70+8
 971 0040 1B68     		ldr	r3, [r3]
 972 0042 1B0F     		lsrs	r3, r3, #28
 973 0044 1A07     		lsls	r2, r3, #28
 974 0046 A023     		movs	r3, #160
 975 0048 1B06     		lsls	r3, r3, #24
 976 004a 9A42     		cmp	r2, r3
 977 004c 04D0     		beq	.L67
 978              		.loc 1 792 0 discriminator 4
 979 004e 084B     		ldr	r3, .L70+8
 980 0050 1B68     		ldr	r3, [r3]
 981 0052 FF22     		movs	r2, #255
 982 0054 1340     		ands	r3, r2
 983 0056 00E0     		b	.L66
 984              	.L67:
 985              		.loc 1 792 0 discriminator 5
 986 0058 0023     		movs	r3, #0
 987              	.L66:
 988              		.loc 1 792 0 discriminator 8
 989 005a FB60     		str	r3, [r7, #12]
 793:Generated_Source\PSoC4/CyFlash.c ****         #endif /* (CY_IP_SPCIF_SYNCHRONOUS) */
 794:Generated_Source\PSoC4/CyFlash.c **** 
 795:Generated_Source\PSoC4/CyFlash.c ****     #endif  /* (CY_PSOC4_4000) */
 796:Generated_Source\PSoC4/CyFlash.c **** 
 797:Generated_Source\PSoC4/CyFlash.c **** #endif  /* (CY_IP_FM) */
 798:Generated_Source\PSoC4/CyFlash.c **** 
 799:Generated_Source\PSoC4/CyFlash.c ****     return (retValue);
 990              		.loc 1 799 0 is_stmt 1 discriminator 8
 991 005c FB68     		ldr	r3, [r7, #12]
 800:Generated_Source\PSoC4/CyFlash.c **** }
 992              		.loc 1 800 0 discriminator 8
 993 005e 1800     		movs	r0, r3
 994 0060 BD46     		mov	sp, r7
 995 0062 04B0     		add	sp, sp, #16
 996              		@ sp needed
 997 0064 80BD     		pop	{r7, pc}
 998              	.L71:
 999 0066 C046     		.align	2
 1000              	.L70:
 1001 0068 B6EA0000 		.word	60086
 1002 006c 04000000 		.word	cySysFlashBackup+4
 1003 0070 08001040 		.word	1074790408
 1004 0074 04001040 		.word	1074790404
 1005 0078 17000080 		.word	-2147483625
 1006              		.cfi_endproc
 1007              	.LFE7:
 1008              		.size	CySysFlashClockRestore, .-CySysFlashClockRestore
 1009              		.text
 1010              	.Letext0:
 1011              		.file 2 "Generated_Source\\PSoC4\\cytypes.h"
 1012              		.file 3 "Generated_Source\\PSoC4\\CyFlash.h"
 1013              		.section	.debug_info,"",%progbits
 1014              	.Ldebug_info0:
 1015 0000 16030000 		.4byte	0x316
 1016 0004 0400     		.2byte	0x4
ARM GAS  C:\Users\Toshiba\AppData\Local\Temp\ccSNWM24.s 			page 33


 1017 0006 00000000 		.4byte	.Ldebug_abbrev0
 1018 000a 04       		.byte	0x4
 1019 000b 01       		.uleb128 0x1
 1020 000c CB000000 		.4byte	.LASF35
 1021 0010 0C       		.byte	0xc
 1022 0011 13020000 		.4byte	.LASF36
 1023 0015 78010000 		.4byte	.LASF37
 1024 0019 00000000 		.4byte	.Ldebug_ranges0+0
 1025 001d 00000000 		.4byte	0
 1026 0021 00000000 		.4byte	.Ldebug_line0
 1027 0025 02       		.uleb128 0x2
 1028 0026 01       		.byte	0x1
 1029 0027 06       		.byte	0x6
 1030 0028 02030000 		.4byte	.LASF0
 1031 002c 02       		.uleb128 0x2
 1032 002d 01       		.byte	0x1
 1033 002e 08       		.byte	0x8
 1034 002f 93000000 		.4byte	.LASF1
 1035 0033 02       		.uleb128 0x2
 1036 0034 02       		.byte	0x2
 1037 0035 05       		.byte	0x5
 1038 0036 60010000 		.4byte	.LASF2
 1039 003a 02       		.uleb128 0x2
 1040 003b 02       		.byte	0x2
 1041 003c 07       		.byte	0x7
 1042 003d 62000000 		.4byte	.LASF3
 1043 0041 02       		.uleb128 0x2
 1044 0042 04       		.byte	0x4
 1045 0043 05       		.byte	0x5
 1046 0044 ED020000 		.4byte	.LASF4
 1047 0048 02       		.uleb128 0x2
 1048 0049 04       		.byte	0x4
 1049 004a 07       		.byte	0x7
 1050 004b 01020000 		.4byte	.LASF5
 1051 004f 02       		.uleb128 0x2
 1052 0050 08       		.byte	0x8
 1053 0051 05       		.byte	0x5
 1054 0052 63020000 		.4byte	.LASF6
 1055 0056 02       		.uleb128 0x2
 1056 0057 08       		.byte	0x8
 1057 0058 07       		.byte	0x7
 1058 0059 34020000 		.4byte	.LASF7
 1059 005d 03       		.uleb128 0x3
 1060 005e 04       		.byte	0x4
 1061 005f 05       		.byte	0x5
 1062 0060 696E7400 		.ascii	"int\000"
 1063 0064 02       		.uleb128 0x2
 1064 0065 04       		.byte	0x4
 1065 0066 07       		.byte	0x7
 1066 0067 75000000 		.4byte	.LASF8
 1067 006b 04       		.uleb128 0x4
 1068 006c C5000000 		.4byte	.LASF9
 1069 0070 02       		.byte	0x2
 1070 0071 D201     		.2byte	0x1d2
 1071 0073 2C000000 		.4byte	0x2c
 1072 0077 04       		.uleb128 0x4
 1073 0078 6A010000 		.4byte	.LASF10
ARM GAS  C:\Users\Toshiba\AppData\Local\Temp\ccSNWM24.s 			page 34


 1074 007c 02       		.byte	0x2
 1075 007d D301     		.2byte	0x1d3
 1076 007f 3A000000 		.4byte	0x3a
 1077 0083 04       		.uleb128 0x4
 1078 0084 71010000 		.4byte	.LASF11
 1079 0088 02       		.byte	0x2
 1080 0089 D401     		.2byte	0x1d4
 1081 008b 48000000 		.4byte	0x48
 1082 008f 02       		.uleb128 0x2
 1083 0090 04       		.byte	0x4
 1084 0091 04       		.byte	0x4
 1085 0092 82000000 		.4byte	.LASF12
 1086 0096 02       		.uleb128 0x2
 1087 0097 08       		.byte	0x8
 1088 0098 04       		.byte	0x4
 1089 0099 59010000 		.4byte	.LASF13
 1090 009d 02       		.uleb128 0x2
 1091 009e 01       		.byte	0x1
 1092 009f 08       		.byte	0x8
 1093 00a0 71020000 		.4byte	.LASF14
 1094 00a4 04       		.uleb128 0x4
 1095 00a5 00000000 		.4byte	.LASF15
 1096 00a9 02       		.byte	0x2
 1097 00aa 7402     		.2byte	0x274
 1098 00ac 48000000 		.4byte	0x48
 1099 00b0 04       		.uleb128 0x4
 1100 00b1 09000000 		.4byte	.LASF16
 1101 00b5 02       		.byte	0x2
 1102 00b6 7E02     		.2byte	0x27e
 1103 00b8 BC000000 		.4byte	0xbc
 1104 00bc 05       		.uleb128 0x5
 1105 00bd 83000000 		.4byte	0x83
 1106 00c1 02       		.uleb128 0x2
 1107 00c2 08       		.byte	0x8
 1108 00c3 04       		.byte	0x4
 1109 00c4 F6020000 		.4byte	.LASF17
 1110 00c8 02       		.uleb128 0x2
 1111 00c9 04       		.byte	0x4
 1112 00ca 07       		.byte	0x7
 1113 00cb 5A020000 		.4byte	.LASF18
 1114 00cf 06       		.uleb128 0x6
 1115 00d0 2E000000 		.4byte	.LASF38
 1116 00d4 14       		.byte	0x14
 1117 00d5 03       		.byte	0x3
 1118 00d6 D7       		.byte	0xd7
 1119 00d7 F4000000 		.4byte	0xf4
 1120 00db 07       		.uleb128 0x7
 1121 00dc 88000000 		.4byte	.LASF19
 1122 00e0 03       		.byte	0x3
 1123 00e1 E3       		.byte	0xe3
 1124 00e2 83000000 		.4byte	0x83
 1125 00e6 00       		.byte	0
 1126 00e7 07       		.uleb128 0x7
 1127 00e8 7B020000 		.4byte	.LASF20
 1128 00ec 03       		.byte	0x3
 1129 00ed E7       		.byte	0xe7
 1130 00ee F4000000 		.4byte	0xf4
ARM GAS  C:\Users\Toshiba\AppData\Local\Temp\ccSNWM24.s 			page 35


 1131 00f2 04       		.byte	0x4
 1132 00f3 00       		.byte	0
 1133 00f4 08       		.uleb128 0x8
 1134 00f5 83000000 		.4byte	0x83
 1135 00f9 04010000 		.4byte	0x104
 1136 00fd 09       		.uleb128 0x9
 1137 00fe C8000000 		.4byte	0xc8
 1138 0102 03       		.byte	0x3
 1139 0103 00       		.byte	0
 1140 0104 0A       		.uleb128 0xa
 1141 0105 CC020000 		.4byte	.LASF21
 1142 0109 03       		.byte	0x3
 1143 010a ED       		.byte	0xed
 1144 010b CF000000 		.4byte	0xcf
 1145 010f 0B       		.uleb128 0xb
 1146 0110 0E030000 		.4byte	.LASF29
 1147 0114 01       		.byte	0x1
 1148 0115 51       		.byte	0x51
 1149 0116 83000000 		.4byte	0x83
 1150 011a 00000000 		.4byte	.LFB2
 1151 011e C4010000 		.4byte	.LFE2-.LFB2
 1152 0122 01       		.uleb128 0x1
 1153 0123 9C       		.byte	0x9c
 1154 0124 80010000 		.4byte	0x180
 1155 0128 0C       		.uleb128 0xc
 1156 0129 18000000 		.4byte	.LASF22
 1157 012d 01       		.byte	0x1
 1158 012e 51       		.byte	0x51
 1159 012f 83000000 		.4byte	0x83
 1160 0133 03       		.uleb128 0x3
 1161 0134 91       		.byte	0x91
 1162 0135 D47E     		.sleb128 -172
 1163 0137 0C       		.uleb128 0xc
 1164 0138 A1000000 		.4byte	.LASF23
 1165 013c 01       		.byte	0x1
 1166 013d 51       		.byte	0x51
 1167 013e 80010000 		.4byte	0x180
 1168 0142 03       		.uleb128 0x3
 1169 0143 91       		.byte	0x91
 1170 0144 D07E     		.sleb128 -176
 1171 0146 0D       		.uleb128 0xd
 1172 0147 0F000000 		.4byte	.LASF24
 1173 014b 01       		.byte	0x1
 1174 014c 53       		.byte	0x53
 1175 014d BC000000 		.4byte	0xbc
 1176 0151 02       		.uleb128 0x2
 1177 0152 91       		.byte	0x91
 1178 0153 68       		.sleb128 -24
 1179 0154 0D       		.uleb128 0xd
 1180 0155 1F000000 		.4byte	.LASF25
 1181 0159 01       		.byte	0x1
 1182 015a 54       		.byte	0x54
 1183 015b BC000000 		.4byte	0xbc
 1184 015f 02       		.uleb128 0x2
 1185 0160 91       		.byte	0x91
 1186 0161 64       		.sleb128 -28
 1187 0162 0D       		.uleb128 0xd
ARM GAS  C:\Users\Toshiba\AppData\Local\Temp\ccSNWM24.s 			page 36


 1188 0163 A9000000 		.4byte	.LASF26
 1189 0167 01       		.byte	0x1
 1190 0168 55       		.byte	0x55
 1191 0169 9B010000 		.4byte	0x19b
 1192 016d 03       		.uleb128 0x3
 1193 016e 91       		.byte	0x91
 1194 016f DC7E     		.sleb128 -164
 1195 0171 0D       		.uleb128 0xd
 1196 0172 4B020000 		.4byte	.LASF27
 1197 0176 01       		.byte	0x1
 1198 0177 56       		.byte	0x56
 1199 0178 6B000000 		.4byte	0x6b
 1200 017c 02       		.uleb128 0x2
 1201 017d 91       		.byte	0x91
 1202 017e 6F       		.sleb128 -17
 1203 017f 00       		.byte	0
 1204 0180 0E       		.uleb128 0xe
 1205 0181 04       		.byte	0x4
 1206 0182 86010000 		.4byte	0x186
 1207 0186 0F       		.uleb128 0xf
 1208 0187 6B000000 		.4byte	0x6b
 1209 018b 08       		.uleb128 0x8
 1210 018c BC000000 		.4byte	0xbc
 1211 0190 9B010000 		.4byte	0x19b
 1212 0194 09       		.uleb128 0x9
 1213 0195 C8000000 		.4byte	0xc8
 1214 0199 21       		.byte	0x21
 1215 019a 00       		.byte	0
 1216 019b 05       		.uleb128 0x5
 1217 019c 8B010000 		.4byte	0x18b
 1218 01a0 10       		.uleb128 0x10
 1219 01a1 21030000 		.4byte	.LASF39
 1220 01a5 01       		.byte	0x1
 1221 01a6 A601     		.2byte	0x1a6
 1222 01a8 00000000 		.4byte	.LFB3
 1223 01ac 78000000 		.4byte	.LFE3-.LFB3
 1224 01b0 01       		.uleb128 0x1
 1225 01b1 9C       		.byte	0x9c
 1226 01b2 D5010000 		.4byte	0x1d5
 1227 01b6 11       		.uleb128 0x11
 1228 01b7 76020000 		.4byte	.LASF28
 1229 01bb 01       		.byte	0x1
 1230 01bc A601     		.2byte	0x1a6
 1231 01be 83000000 		.4byte	0x83
 1232 01c2 02       		.uleb128 0x2
 1233 01c3 91       		.byte	0x91
 1234 01c4 64       		.sleb128 -28
 1235 01c5 12       		.uleb128 0x12
 1236 01c6 4B020000 		.4byte	.LASF27
 1237 01ca 01       		.byte	0x1
 1238 01cb A801     		.2byte	0x1a8
 1239 01cd 6B000000 		.4byte	0x6b
 1240 01d1 02       		.uleb128 0x2
 1241 01d2 91       		.byte	0x91
 1242 01d3 6F       		.sleb128 -17
 1243 01d4 00       		.byte	0
 1244 01d5 13       		.uleb128 0x13
ARM GAS  C:\Users\Toshiba\AppData\Local\Temp\ccSNWM24.s 			page 37


 1245 01d6 4A000000 		.4byte	.LASF30
 1246 01da 01       		.byte	0x1
 1247 01db EA01     		.2byte	0x1ea
 1248 01dd 83000000 		.4byte	0x83
 1249 01e1 00000000 		.4byte	.LFB4
 1250 01e5 9C010000 		.4byte	.LFE4-.LFB4
 1251 01e9 01       		.uleb128 0x1
 1252 01ea 9C       		.byte	0x9c
 1253 01eb 4D020000 		.4byte	0x24d
 1254 01ef 11       		.uleb128 0x11
 1255 01f0 18000000 		.4byte	.LASF22
 1256 01f4 01       		.byte	0x1
 1257 01f5 EA01     		.2byte	0x1ea
 1258 01f7 83000000 		.4byte	0x83
 1259 01fb 03       		.uleb128 0x3
 1260 01fc 91       		.byte	0x91
 1261 01fd D47E     		.sleb128 -172
 1262 01ff 11       		.uleb128 0x11
 1263 0200 A1000000 		.4byte	.LASF23
 1264 0204 01       		.byte	0x1
 1265 0205 EA01     		.2byte	0x1ea
 1266 0207 80010000 		.4byte	0x180
 1267 020b 03       		.uleb128 0x3
 1268 020c 91       		.byte	0x91
 1269 020d D07E     		.sleb128 -176
 1270 020f 12       		.uleb128 0x12
 1271 0210 0F000000 		.4byte	.LASF24
 1272 0214 01       		.byte	0x1
 1273 0215 EC01     		.2byte	0x1ec
 1274 0217 BC000000 		.4byte	0xbc
 1275 021b 02       		.uleb128 0x2
 1276 021c 91       		.byte	0x91
 1277 021d 68       		.sleb128 -24
 1278 021e 12       		.uleb128 0x12
 1279 021f 1F000000 		.4byte	.LASF25
 1280 0223 01       		.byte	0x1
 1281 0224 ED01     		.2byte	0x1ed
 1282 0226 BC000000 		.4byte	0xbc
 1283 022a 02       		.uleb128 0x2
 1284 022b 91       		.byte	0x91
 1285 022c 64       		.sleb128 -28
 1286 022d 12       		.uleb128 0x12
 1287 022e A9000000 		.4byte	.LASF26
 1288 0232 01       		.byte	0x1
 1289 0233 EE01     		.2byte	0x1ee
 1290 0235 4D020000 		.4byte	0x24d
 1291 0239 03       		.uleb128 0x3
 1292 023a 91       		.byte	0x91
 1293 023b DC7E     		.sleb128 -164
 1294 023d 12       		.uleb128 0x12
 1295 023e 4B020000 		.4byte	.LASF27
 1296 0242 01       		.byte	0x1
 1297 0243 EF01     		.2byte	0x1ef
 1298 0245 6B000000 		.4byte	0x6b
 1299 0249 02       		.uleb128 0x2
 1300 024a 91       		.byte	0x91
 1301 024b 6F       		.sleb128 -17
ARM GAS  C:\Users\Toshiba\AppData\Local\Temp\ccSNWM24.s 			page 38


 1302 024c 00       		.byte	0
 1303 024d 05       		.uleb128 0x5
 1304 024e 8B010000 		.4byte	0x18b
 1305 0252 14       		.uleb128 0x14
 1306 0253 B6020000 		.4byte	.LASF31
 1307 0257 01       		.byte	0x1
 1308 0258 3A02     		.2byte	0x23a
 1309 025a A4000000 		.4byte	0xa4
 1310 025e 00000000 		.4byte	.LFB5
 1311 0262 7C000000 		.4byte	.LFE5-.LFB5
 1312 0266 01       		.uleb128 0x1
 1313 0267 9C       		.byte	0x9c
 1314 0268 8B020000 		.4byte	0x28b
 1315 026c 12       		.uleb128 0x12
 1316 026d 0F000000 		.4byte	.LASF24
 1317 0271 01       		.byte	0x1
 1318 0272 3C02     		.2byte	0x23c
 1319 0274 A4000000 		.4byte	0xa4
 1320 0278 02       		.uleb128 0x2
 1321 0279 91       		.byte	0x91
 1322 027a 74       		.sleb128 -12
 1323 027b 12       		.uleb128 0x12
 1324 027c A9000000 		.4byte	.LASF26
 1325 0280 01       		.byte	0x1
 1326 0281 4002     		.2byte	0x240
 1327 0283 9B020000 		.4byte	0x29b
 1328 0287 02       		.uleb128 0x2
 1329 0288 91       		.byte	0x91
 1330 0289 6C       		.sleb128 -20
 1331 028a 00       		.byte	0
 1332 028b 08       		.uleb128 0x8
 1333 028c BC000000 		.4byte	0xbc
 1334 0290 9B020000 		.4byte	0x29b
 1335 0294 09       		.uleb128 0x9
 1336 0295 C8000000 		.4byte	0xc8
 1337 0299 01       		.byte	0x1
 1338 029a 00       		.byte	0
 1339 029b 05       		.uleb128 0x5
 1340 029c 8B020000 		.4byte	0x28b
 1341 02a0 14       		.uleb128 0x14
 1342 02a1 89020000 		.4byte	.LASF32
 1343 02a5 01       		.byte	0x1
 1344 02a6 8E02     		.2byte	0x28e
 1345 02a8 A4000000 		.4byte	0xa4
 1346 02ac 00000000 		.4byte	.LFB6
 1347 02b0 6C000000 		.4byte	.LFE6-.LFB6
 1348 02b4 01       		.uleb128 0x1
 1349 02b5 9C       		.byte	0x9c
 1350 02b6 CA020000 		.4byte	0x2ca
 1351 02ba 12       		.uleb128 0x12
 1352 02bb 0F000000 		.4byte	.LASF24
 1353 02bf 01       		.byte	0x1
 1354 02c0 9002     		.2byte	0x290
 1355 02c2 A4000000 		.4byte	0xa4
 1356 02c6 02       		.uleb128 0x2
 1357 02c7 91       		.byte	0x91
 1358 02c8 74       		.sleb128 -12
ARM GAS  C:\Users\Toshiba\AppData\Local\Temp\ccSNWM24.s 			page 39


 1359 02c9 00       		.byte	0
 1360 02ca 14       		.uleb128 0x14
 1361 02cb 9F020000 		.4byte	.LASF33
 1362 02cf 01       		.byte	0x1
 1363 02d0 D802     		.2byte	0x2d8
 1364 02d2 A4000000 		.4byte	0xa4
 1365 02d6 00000000 		.4byte	.LFB7
 1366 02da 7C000000 		.4byte	.LFE7-.LFB7
 1367 02de 01       		.uleb128 0x1
 1368 02df 9C       		.byte	0x9c
 1369 02e0 03030000 		.4byte	0x303
 1370 02e4 12       		.uleb128 0x12
 1371 02e5 0F000000 		.4byte	.LASF24
 1372 02e9 01       		.byte	0x1
 1373 02ea DA02     		.2byte	0x2da
 1374 02ec A4000000 		.4byte	0xa4
 1375 02f0 02       		.uleb128 0x2
 1376 02f1 91       		.byte	0x91
 1377 02f2 74       		.sleb128 -12
 1378 02f3 12       		.uleb128 0x12
 1379 02f4 A9000000 		.4byte	.LASF26
 1380 02f8 01       		.byte	0x1
 1381 02f9 DE02     		.2byte	0x2de
 1382 02fb 03030000 		.4byte	0x303
 1383 02ff 02       		.uleb128 0x2
 1384 0300 91       		.byte	0x91
 1385 0301 6C       		.sleb128 -20
 1386 0302 00       		.byte	0
 1387 0303 05       		.uleb128 0x5
 1388 0304 8B020000 		.4byte	0x28b
 1389 0308 0D       		.uleb128 0xd
 1390 0309 B4000000 		.4byte	.LASF34
 1391 030d 01       		.byte	0x1
 1392 030e 22       		.byte	0x22
 1393 030f 04010000 		.4byte	0x104
 1394 0313 05       		.uleb128 0x5
 1395 0314 03       		.byte	0x3
 1396 0315 00000000 		.4byte	cySysFlashBackup
 1397 0319 00       		.byte	0
 1398              		.section	.debug_abbrev,"",%progbits
 1399              	.Ldebug_abbrev0:
 1400 0000 01       		.uleb128 0x1
 1401 0001 11       		.uleb128 0x11
 1402 0002 01       		.byte	0x1
 1403 0003 25       		.uleb128 0x25
 1404 0004 0E       		.uleb128 0xe
 1405 0005 13       		.uleb128 0x13
 1406 0006 0B       		.uleb128 0xb
 1407 0007 03       		.uleb128 0x3
 1408 0008 0E       		.uleb128 0xe
 1409 0009 1B       		.uleb128 0x1b
 1410 000a 0E       		.uleb128 0xe
 1411 000b 55       		.uleb128 0x55
 1412 000c 17       		.uleb128 0x17
 1413 000d 11       		.uleb128 0x11
 1414 000e 01       		.uleb128 0x1
 1415 000f 10       		.uleb128 0x10
ARM GAS  C:\Users\Toshiba\AppData\Local\Temp\ccSNWM24.s 			page 40


 1416 0010 17       		.uleb128 0x17
 1417 0011 00       		.byte	0
 1418 0012 00       		.byte	0
 1419 0013 02       		.uleb128 0x2
 1420 0014 24       		.uleb128 0x24
 1421 0015 00       		.byte	0
 1422 0016 0B       		.uleb128 0xb
 1423 0017 0B       		.uleb128 0xb
 1424 0018 3E       		.uleb128 0x3e
 1425 0019 0B       		.uleb128 0xb
 1426 001a 03       		.uleb128 0x3
 1427 001b 0E       		.uleb128 0xe
 1428 001c 00       		.byte	0
 1429 001d 00       		.byte	0
 1430 001e 03       		.uleb128 0x3
 1431 001f 24       		.uleb128 0x24
 1432 0020 00       		.byte	0
 1433 0021 0B       		.uleb128 0xb
 1434 0022 0B       		.uleb128 0xb
 1435 0023 3E       		.uleb128 0x3e
 1436 0024 0B       		.uleb128 0xb
 1437 0025 03       		.uleb128 0x3
 1438 0026 08       		.uleb128 0x8
 1439 0027 00       		.byte	0
 1440 0028 00       		.byte	0
 1441 0029 04       		.uleb128 0x4
 1442 002a 16       		.uleb128 0x16
 1443 002b 00       		.byte	0
 1444 002c 03       		.uleb128 0x3
 1445 002d 0E       		.uleb128 0xe
 1446 002e 3A       		.uleb128 0x3a
 1447 002f 0B       		.uleb128 0xb
 1448 0030 3B       		.uleb128 0x3b
 1449 0031 05       		.uleb128 0x5
 1450 0032 49       		.uleb128 0x49
 1451 0033 13       		.uleb128 0x13
 1452 0034 00       		.byte	0
 1453 0035 00       		.byte	0
 1454 0036 05       		.uleb128 0x5
 1455 0037 35       		.uleb128 0x35
 1456 0038 00       		.byte	0
 1457 0039 49       		.uleb128 0x49
 1458 003a 13       		.uleb128 0x13
 1459 003b 00       		.byte	0
 1460 003c 00       		.byte	0
 1461 003d 06       		.uleb128 0x6
 1462 003e 13       		.uleb128 0x13
 1463 003f 01       		.byte	0x1
 1464 0040 03       		.uleb128 0x3
 1465 0041 0E       		.uleb128 0xe
 1466 0042 0B       		.uleb128 0xb
 1467 0043 0B       		.uleb128 0xb
 1468 0044 3A       		.uleb128 0x3a
 1469 0045 0B       		.uleb128 0xb
 1470 0046 3B       		.uleb128 0x3b
 1471 0047 0B       		.uleb128 0xb
 1472 0048 01       		.uleb128 0x1
ARM GAS  C:\Users\Toshiba\AppData\Local\Temp\ccSNWM24.s 			page 41


 1473 0049 13       		.uleb128 0x13
 1474 004a 00       		.byte	0
 1475 004b 00       		.byte	0
 1476 004c 07       		.uleb128 0x7
 1477 004d 0D       		.uleb128 0xd
 1478 004e 00       		.byte	0
 1479 004f 03       		.uleb128 0x3
 1480 0050 0E       		.uleb128 0xe
 1481 0051 3A       		.uleb128 0x3a
 1482 0052 0B       		.uleb128 0xb
 1483 0053 3B       		.uleb128 0x3b
 1484 0054 0B       		.uleb128 0xb
 1485 0055 49       		.uleb128 0x49
 1486 0056 13       		.uleb128 0x13
 1487 0057 38       		.uleb128 0x38
 1488 0058 0B       		.uleb128 0xb
 1489 0059 00       		.byte	0
 1490 005a 00       		.byte	0
 1491 005b 08       		.uleb128 0x8
 1492 005c 01       		.uleb128 0x1
 1493 005d 01       		.byte	0x1
 1494 005e 49       		.uleb128 0x49
 1495 005f 13       		.uleb128 0x13
 1496 0060 01       		.uleb128 0x1
 1497 0061 13       		.uleb128 0x13
 1498 0062 00       		.byte	0
 1499 0063 00       		.byte	0
 1500 0064 09       		.uleb128 0x9
 1501 0065 21       		.uleb128 0x21
 1502 0066 00       		.byte	0
 1503 0067 49       		.uleb128 0x49
 1504 0068 13       		.uleb128 0x13
 1505 0069 2F       		.uleb128 0x2f
 1506 006a 0B       		.uleb128 0xb
 1507 006b 00       		.byte	0
 1508 006c 00       		.byte	0
 1509 006d 0A       		.uleb128 0xa
 1510 006e 16       		.uleb128 0x16
 1511 006f 00       		.byte	0
 1512 0070 03       		.uleb128 0x3
 1513 0071 0E       		.uleb128 0xe
 1514 0072 3A       		.uleb128 0x3a
 1515 0073 0B       		.uleb128 0xb
 1516 0074 3B       		.uleb128 0x3b
 1517 0075 0B       		.uleb128 0xb
 1518 0076 49       		.uleb128 0x49
 1519 0077 13       		.uleb128 0x13
 1520 0078 00       		.byte	0
 1521 0079 00       		.byte	0
 1522 007a 0B       		.uleb128 0xb
 1523 007b 2E       		.uleb128 0x2e
 1524 007c 01       		.byte	0x1
 1525 007d 3F       		.uleb128 0x3f
 1526 007e 19       		.uleb128 0x19
 1527 007f 03       		.uleb128 0x3
 1528 0080 0E       		.uleb128 0xe
 1529 0081 3A       		.uleb128 0x3a
ARM GAS  C:\Users\Toshiba\AppData\Local\Temp\ccSNWM24.s 			page 42


 1530 0082 0B       		.uleb128 0xb
 1531 0083 3B       		.uleb128 0x3b
 1532 0084 0B       		.uleb128 0xb
 1533 0085 27       		.uleb128 0x27
 1534 0086 19       		.uleb128 0x19
 1535 0087 49       		.uleb128 0x49
 1536 0088 13       		.uleb128 0x13
 1537 0089 11       		.uleb128 0x11
 1538 008a 01       		.uleb128 0x1
 1539 008b 12       		.uleb128 0x12
 1540 008c 06       		.uleb128 0x6
 1541 008d 40       		.uleb128 0x40
 1542 008e 18       		.uleb128 0x18
 1543 008f 9642     		.uleb128 0x2116
 1544 0091 19       		.uleb128 0x19
 1545 0092 01       		.uleb128 0x1
 1546 0093 13       		.uleb128 0x13
 1547 0094 00       		.byte	0
 1548 0095 00       		.byte	0
 1549 0096 0C       		.uleb128 0xc
 1550 0097 05       		.uleb128 0x5
 1551 0098 00       		.byte	0
 1552 0099 03       		.uleb128 0x3
 1553 009a 0E       		.uleb128 0xe
 1554 009b 3A       		.uleb128 0x3a
 1555 009c 0B       		.uleb128 0xb
 1556 009d 3B       		.uleb128 0x3b
 1557 009e 0B       		.uleb128 0xb
 1558 009f 49       		.uleb128 0x49
 1559 00a0 13       		.uleb128 0x13
 1560 00a1 02       		.uleb128 0x2
 1561 00a2 18       		.uleb128 0x18
 1562 00a3 00       		.byte	0
 1563 00a4 00       		.byte	0
 1564 00a5 0D       		.uleb128 0xd
 1565 00a6 34       		.uleb128 0x34
 1566 00a7 00       		.byte	0
 1567 00a8 03       		.uleb128 0x3
 1568 00a9 0E       		.uleb128 0xe
 1569 00aa 3A       		.uleb128 0x3a
 1570 00ab 0B       		.uleb128 0xb
 1571 00ac 3B       		.uleb128 0x3b
 1572 00ad 0B       		.uleb128 0xb
 1573 00ae 49       		.uleb128 0x49
 1574 00af 13       		.uleb128 0x13
 1575 00b0 02       		.uleb128 0x2
 1576 00b1 18       		.uleb128 0x18
 1577 00b2 00       		.byte	0
 1578 00b3 00       		.byte	0
 1579 00b4 0E       		.uleb128 0xe
 1580 00b5 0F       		.uleb128 0xf
 1581 00b6 00       		.byte	0
 1582 00b7 0B       		.uleb128 0xb
 1583 00b8 0B       		.uleb128 0xb
 1584 00b9 49       		.uleb128 0x49
 1585 00ba 13       		.uleb128 0x13
 1586 00bb 00       		.byte	0
ARM GAS  C:\Users\Toshiba\AppData\Local\Temp\ccSNWM24.s 			page 43


 1587 00bc 00       		.byte	0
 1588 00bd 0F       		.uleb128 0xf
 1589 00be 26       		.uleb128 0x26
 1590 00bf 00       		.byte	0
 1591 00c0 49       		.uleb128 0x49
 1592 00c1 13       		.uleb128 0x13
 1593 00c2 00       		.byte	0
 1594 00c3 00       		.byte	0
 1595 00c4 10       		.uleb128 0x10
 1596 00c5 2E       		.uleb128 0x2e
 1597 00c6 01       		.byte	0x1
 1598 00c7 3F       		.uleb128 0x3f
 1599 00c8 19       		.uleb128 0x19
 1600 00c9 03       		.uleb128 0x3
 1601 00ca 0E       		.uleb128 0xe
 1602 00cb 3A       		.uleb128 0x3a
 1603 00cc 0B       		.uleb128 0xb
 1604 00cd 3B       		.uleb128 0x3b
 1605 00ce 05       		.uleb128 0x5
 1606 00cf 27       		.uleb128 0x27
 1607 00d0 19       		.uleb128 0x19
 1608 00d1 11       		.uleb128 0x11
 1609 00d2 01       		.uleb128 0x1
 1610 00d3 12       		.uleb128 0x12
 1611 00d4 06       		.uleb128 0x6
 1612 00d5 40       		.uleb128 0x40
 1613 00d6 18       		.uleb128 0x18
 1614 00d7 9642     		.uleb128 0x2116
 1615 00d9 19       		.uleb128 0x19
 1616 00da 01       		.uleb128 0x1
 1617 00db 13       		.uleb128 0x13
 1618 00dc 00       		.byte	0
 1619 00dd 00       		.byte	0
 1620 00de 11       		.uleb128 0x11
 1621 00df 05       		.uleb128 0x5
 1622 00e0 00       		.byte	0
 1623 00e1 03       		.uleb128 0x3
 1624 00e2 0E       		.uleb128 0xe
 1625 00e3 3A       		.uleb128 0x3a
 1626 00e4 0B       		.uleb128 0xb
 1627 00e5 3B       		.uleb128 0x3b
 1628 00e6 05       		.uleb128 0x5
 1629 00e7 49       		.uleb128 0x49
 1630 00e8 13       		.uleb128 0x13
 1631 00e9 02       		.uleb128 0x2
 1632 00ea 18       		.uleb128 0x18
 1633 00eb 00       		.byte	0
 1634 00ec 00       		.byte	0
 1635 00ed 12       		.uleb128 0x12
 1636 00ee 34       		.uleb128 0x34
 1637 00ef 00       		.byte	0
 1638 00f0 03       		.uleb128 0x3
 1639 00f1 0E       		.uleb128 0xe
 1640 00f2 3A       		.uleb128 0x3a
 1641 00f3 0B       		.uleb128 0xb
 1642 00f4 3B       		.uleb128 0x3b
 1643 00f5 05       		.uleb128 0x5
ARM GAS  C:\Users\Toshiba\AppData\Local\Temp\ccSNWM24.s 			page 44


 1644 00f6 49       		.uleb128 0x49
 1645 00f7 13       		.uleb128 0x13
 1646 00f8 02       		.uleb128 0x2
 1647 00f9 18       		.uleb128 0x18
 1648 00fa 00       		.byte	0
 1649 00fb 00       		.byte	0
 1650 00fc 13       		.uleb128 0x13
 1651 00fd 2E       		.uleb128 0x2e
 1652 00fe 01       		.byte	0x1
 1653 00ff 3F       		.uleb128 0x3f
 1654 0100 19       		.uleb128 0x19
 1655 0101 03       		.uleb128 0x3
 1656 0102 0E       		.uleb128 0xe
 1657 0103 3A       		.uleb128 0x3a
 1658 0104 0B       		.uleb128 0xb
 1659 0105 3B       		.uleb128 0x3b
 1660 0106 05       		.uleb128 0x5
 1661 0107 27       		.uleb128 0x27
 1662 0108 19       		.uleb128 0x19
 1663 0109 49       		.uleb128 0x49
 1664 010a 13       		.uleb128 0x13
 1665 010b 11       		.uleb128 0x11
 1666 010c 01       		.uleb128 0x1
 1667 010d 12       		.uleb128 0x12
 1668 010e 06       		.uleb128 0x6
 1669 010f 40       		.uleb128 0x40
 1670 0110 18       		.uleb128 0x18
 1671 0111 9642     		.uleb128 0x2116
 1672 0113 19       		.uleb128 0x19
 1673 0114 01       		.uleb128 0x1
 1674 0115 13       		.uleb128 0x13
 1675 0116 00       		.byte	0
 1676 0117 00       		.byte	0
 1677 0118 14       		.uleb128 0x14
 1678 0119 2E       		.uleb128 0x2e
 1679 011a 01       		.byte	0x1
 1680 011b 03       		.uleb128 0x3
 1681 011c 0E       		.uleb128 0xe
 1682 011d 3A       		.uleb128 0x3a
 1683 011e 0B       		.uleb128 0xb
 1684 011f 3B       		.uleb128 0x3b
 1685 0120 05       		.uleb128 0x5
 1686 0121 27       		.uleb128 0x27
 1687 0122 19       		.uleb128 0x19
 1688 0123 49       		.uleb128 0x49
 1689 0124 13       		.uleb128 0x13
 1690 0125 11       		.uleb128 0x11
 1691 0126 01       		.uleb128 0x1
 1692 0127 12       		.uleb128 0x12
 1693 0128 06       		.uleb128 0x6
 1694 0129 40       		.uleb128 0x40
 1695 012a 18       		.uleb128 0x18
 1696 012b 9742     		.uleb128 0x2117
 1697 012d 19       		.uleb128 0x19
 1698 012e 01       		.uleb128 0x1
 1699 012f 13       		.uleb128 0x13
 1700 0130 00       		.byte	0
ARM GAS  C:\Users\Toshiba\AppData\Local\Temp\ccSNWM24.s 			page 45


 1701 0131 00       		.byte	0
 1702 0132 00       		.byte	0
 1703              		.section	.debug_aranges,"",%progbits
 1704 0000 44000000 		.4byte	0x44
 1705 0004 0200     		.2byte	0x2
 1706 0006 00000000 		.4byte	.Ldebug_info0
 1707 000a 04       		.byte	0x4
 1708 000b 00       		.byte	0
 1709 000c 0000     		.2byte	0
 1710 000e 0000     		.2byte	0
 1711 0010 00000000 		.4byte	.LFB2
 1712 0014 C4010000 		.4byte	.LFE2-.LFB2
 1713 0018 00000000 		.4byte	.LFB3
 1714 001c 78000000 		.4byte	.LFE3-.LFB3
 1715 0020 00000000 		.4byte	.LFB4
 1716 0024 9C010000 		.4byte	.LFE4-.LFB4
 1717 0028 00000000 		.4byte	.LFB5
 1718 002c 7C000000 		.4byte	.LFE5-.LFB5
 1719 0030 00000000 		.4byte	.LFB6
 1720 0034 6C000000 		.4byte	.LFE6-.LFB6
 1721 0038 00000000 		.4byte	.LFB7
 1722 003c 7C000000 		.4byte	.LFE7-.LFB7
 1723 0040 00000000 		.4byte	0
 1724 0044 00000000 		.4byte	0
 1725              		.section	.debug_ranges,"",%progbits
 1726              	.Ldebug_ranges0:
 1727 0000 00000000 		.4byte	.LFB2
 1728 0004 C4010000 		.4byte	.LFE2
 1729 0008 00000000 		.4byte	.LFB3
 1730 000c 78000000 		.4byte	.LFE3
 1731 0010 00000000 		.4byte	.LFB4
 1732 0014 9C010000 		.4byte	.LFE4
 1733 0018 00000000 		.4byte	.LFB5
 1734 001c 7C000000 		.4byte	.LFE5
 1735 0020 00000000 		.4byte	.LFB6
 1736 0024 6C000000 		.4byte	.LFE6
 1737 0028 00000000 		.4byte	.LFB7
 1738 002c 7C000000 		.4byte	.LFE7
 1739 0030 00000000 		.4byte	0
 1740 0034 00000000 		.4byte	0
 1741              		.section	.debug_line,"",%progbits
 1742              	.Ldebug_line0:
 1743 0000 37020000 		.section	.debug_str,"MS",%progbits,1
 1743      02005100 
 1743      00000201 
 1743      FB0E0D00 
 1743      01010101 
 1744              	.LASF15:
 1745 0000 63797374 		.ascii	"cystatus\000"
 1745      61747573 
 1745      00
 1746              	.LASF16:
 1747 0009 72656733 		.ascii	"reg32\000"
 1747      3200
 1748              	.LASF24:
 1749 000f 72657456 		.ascii	"retValue\000"
 1749      616C7565 
ARM GAS  C:\Users\Toshiba\AppData\Local\Temp\ccSNWM24.s 			page 46


 1749      00
 1750              	.LASF22:
 1751 0018 726F774E 		.ascii	"rowNum\000"
 1751      756D00
 1752              	.LASF25:
 1753 001f 636C6B43 		.ascii	"clkCnfRetValue\000"
 1753      6E665265 
 1753      7456616C 
 1753      756500
 1754              	.LASF38:
 1755 002e 63795379 		.ascii	"cySysFlashClockBackupStruct\000"
 1755      73466C61 
 1755      7368436C 
 1755      6F636B42 
 1755      61636B75 
 1756              	.LASF30:
 1757 004a 43795379 		.ascii	"CySysSFlashWriteUserRow\000"
 1757      7353466C 
 1757      61736857 
 1757      72697465 
 1757      55736572 
 1758              	.LASF3:
 1759 0062 73686F72 		.ascii	"short unsigned int\000"
 1759      7420756E 
 1759      7369676E 
 1759      65642069 
 1759      6E7400
 1760              	.LASF8:
 1761 0075 756E7369 		.ascii	"unsigned int\000"
 1761      676E6564 
 1761      20696E74 
 1761      00
 1762              	.LASF12:
 1763 0082 666C6F61 		.ascii	"float\000"
 1763      7400
 1764              	.LASF19:
 1765 0088 636C6B49 		.ascii	"clkImoPump\000"
 1765      6D6F5075 
 1765      6D7000
 1766              	.LASF1:
 1767 0093 756E7369 		.ascii	"unsigned char\000"
 1767      676E6564 
 1767      20636861 
 1767      7200
 1768              	.LASF23:
 1769 00a1 726F7744 		.ascii	"rowData\000"
 1769      61746100 
 1770              	.LASF26:
 1771 00a9 70617261 		.ascii	"parameters\000"
 1771      6D657465 
 1771      727300
 1772              	.LASF34:
 1773 00b4 63795379 		.ascii	"cySysFlashBackup\000"
 1773      73466C61 
 1773      73684261 
 1773      636B7570 
 1773      00
ARM GAS  C:\Users\Toshiba\AppData\Local\Temp\ccSNWM24.s 			page 47


 1774              	.LASF9:
 1775 00c5 75696E74 		.ascii	"uint8\000"
 1775      3800
 1776              	.LASF35:
 1777 00cb 474E5520 		.ascii	"GNU C11 5.4.1 20160609 (release) [ARM/embedded-5-br"
 1777      43313120 
 1777      352E342E 
 1777      31203230 
 1777      31363036 
 1778 00fe 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m0 -mthumb -g -O"
 1778      20726576 
 1778      6973696F 
 1778      6E203233 
 1778      37373135 
 1779 0131 30202D66 		.ascii	"0 -ffunction-sections -ffat-lto-objects\000"
 1779      66756E63 
 1779      74696F6E 
 1779      2D736563 
 1779      74696F6E 
 1780              	.LASF13:
 1781 0159 646F7562 		.ascii	"double\000"
 1781      6C6500
 1782              	.LASF2:
 1783 0160 73686F72 		.ascii	"short int\000"
 1783      7420696E 
 1783      7400
 1784              	.LASF10:
 1785 016a 75696E74 		.ascii	"uint16\000"
 1785      313600
 1786              	.LASF11:
 1787 0171 75696E74 		.ascii	"uint32\000"
 1787      333200
 1788              	.LASF37:
 1789 0178 433A5C55 		.ascii	"C:\\Users\\Toshiba\\Documents\\Repositories\\hackAI"
 1789      73657273 
 1789      5C546F73 
 1789      68696261 
 1789      5C446F63 
 1790 01a6 522D5053 		.ascii	"R-PSoC\\PPD42 - Led Dust Sensor\\PSoC Firmware\\PSo"
 1790      6F435C50 
 1790      50443432 
 1790      202D204C 
 1790      65642044 
 1791 01d6 43204372 		.ascii	"C Creator Project\\PwmLedSensor_PPD42.cydsn\000"
 1791      6561746F 
 1791      72205072 
 1791      6F6A6563 
 1791      745C5077 
 1792              	.LASF5:
 1793 0201 6C6F6E67 		.ascii	"long unsigned int\000"
 1793      20756E73 
 1793      69676E65 
 1793      6420696E 
 1793      7400
 1794              	.LASF36:
 1795 0213 47656E65 		.ascii	"Generated_Source\\PSoC4\\CyFlash.c\000"
 1795      72617465 
ARM GAS  C:\Users\Toshiba\AppData\Local\Temp\ccSNWM24.s 			page 48


 1795      645F536F 
 1795      75726365 
 1795      5C50536F 
 1796              	.LASF7:
 1797 0234 6C6F6E67 		.ascii	"long long unsigned int\000"
 1797      206C6F6E 
 1797      6720756E 
 1797      7369676E 
 1797      65642069 
 1798              	.LASF27:
 1799 024b 696E7465 		.ascii	"interruptState\000"
 1799      72727570 
 1799      74537461 
 1799      746500
 1800              	.LASF18:
 1801 025a 73697A65 		.ascii	"sizetype\000"
 1801      74797065 
 1801      00
 1802              	.LASF6:
 1803 0263 6C6F6E67 		.ascii	"long long int\000"
 1803      206C6F6E 
 1803      6720696E 
 1803      7400
 1804              	.LASF14:
 1805 0271 63686172 		.ascii	"char\000"
 1805      00
 1806              	.LASF28:
 1807 0276 66726571 		.ascii	"freq\000"
 1807      00
 1808              	.LASF20:
 1809 027b 636C6F63 		.ascii	"clockSettings\000"
 1809      6B536574 
 1809      74696E67 
 1809      7300
 1810              	.LASF32:
 1811 0289 43795379 		.ascii	"CySysFlashClockConfig\000"
 1811      73466C61 
 1811      7368436C 
 1811      6F636B43 
 1811      6F6E6669 
 1812              	.LASF33:
 1813 029f 43795379 		.ascii	"CySysFlashClockRestore\000"
 1813      73466C61 
 1813      7368436C 
 1813      6F636B52 
 1813      6573746F 
 1814              	.LASF31:
 1815 02b6 43795379 		.ascii	"CySysFlashClockBackup\000"
 1815      73466C61 
 1815      7368436C 
 1815      6F636B42 
 1815      61636B75 
 1816              	.LASF21:
 1817 02cc 43595F53 		.ascii	"CY_SYS_FLASH_CLOCK_BACKUP_STRUCT\000"
 1817      59535F46 
 1817      4C415348 
 1817      5F434C4F 
ARM GAS  C:\Users\Toshiba\AppData\Local\Temp\ccSNWM24.s 			page 49


 1817      434B5F42 
 1818              	.LASF4:
 1819 02ed 6C6F6E67 		.ascii	"long int\000"
 1819      20696E74 
 1819      00
 1820              	.LASF17:
 1821 02f6 6C6F6E67 		.ascii	"long double\000"
 1821      20646F75 
 1821      626C6500 
 1822              	.LASF0:
 1823 0302 7369676E 		.ascii	"signed char\000"
 1823      65642063 
 1823      68617200 
 1824              	.LASF29:
 1825 030e 43795379 		.ascii	"CySysFlashWriteRow\000"
 1825      73466C61 
 1825      73685772 
 1825      69746552 
 1825      6F7700
 1826              	.LASF39:
 1827 0321 43795379 		.ascii	"CySysFlashSetWaitCycles\000"
 1827      73466C61 
 1827      73685365 
 1827      74576169 
 1827      74437963 
 1828              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran
